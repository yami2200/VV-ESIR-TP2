digraph G {
testAmbiguousPartialLongOption3;
testPropertyOptionSingularValue;
testAmbiguousPartialLongOption2;
testAmbiguousPartialLongOption1;
testWithRequiredOption;
testMissingArg;
testPropertyOverrideValues;
testAmbiguousPartialLongOption4;
testSimpleShort;
testPropertyOptionUnexpected;
testShortWithoutEqual;
testStopAtExpectedArg;
testStopBursting;
testLongOptionWithEqualsQuoteHandling;
testStopAtNonOptionShort;
testPropertyOptionRequired;
testMultipleWithLong;
testOptionGroup;
testUnambiguousPartialLongOption2;
setUp;
testSimpleLong;
testUnambiguousPartialLongOption1;
testUnambiguousPartialLongOption4;
testMissingRequiredOptions;
testUnambiguousPartialLongOption3;
testNegativeOption;
testStopBursting2;
testLongWithoutEqualSingleDash;
testDoubleDash2;
testLongWithoutEqualDoubleDash;
testDoubleDash1;
testUnrecognizedOption;
testPropertyOptionMultipleValues;
testStopAtUnexpectedArg;
testMissingRequiredOption;
testMissingArgWithBursting;
testUnlimitedArgs;
testLongWithEqualSingleDash;
testPropertiesOption1;
testPropertyOptionFlags;
testStopAtNonOptionLong;
testArgumentStartingWithHyphen;
testUnrecognizedOptionWithBursting;
testMultiple;
testPropertiesOption2;
testOptionGroupLong;
testAmbiguousLongWithoutEqualSingleDash;
testPropertyOptionGroup;
testShortOptionQuoteHandling;
testLongOptionQuoteHandling;
testMissingRequiredGroup;
testBursting;
testShortWithEqual;
testOptionAndRequiredOption;
testShortOptionConcatenatedQuoteHandling;
testLongWithUnexpectedArgument2;
testShortWithUnexpectedArgument;
testLongWithUnexpectedArgument1;
testSingleDash;
testLongWithEqualDoubleDash;
testNegativeArgument;
testReuseOptionsTwice;
testPartialLongOptionSingleDash;
testAmbiguousPartialLongOption3 -> testPropertyOptionSingularValue [label=" parser", dir=none];
testAmbiguousPartialLongOption3 -> testAmbiguousPartialLongOption2 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testAmbiguousPartialLongOption1 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testWithRequiredOption [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testMissingArg [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testPropertyOverrideValues [label=" parser", dir=none];
testAmbiguousPartialLongOption3 -> testAmbiguousPartialLongOption4 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testSimpleShort [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testPropertyOptionUnexpected [label=" parser", dir=none];
testAmbiguousPartialLongOption3 -> testShortWithoutEqual [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testStopAtExpectedArg [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testStopBursting [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testLongOptionWithEqualsQuoteHandling [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testStopAtNonOptionShort [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testPropertyOptionRequired [label=" parser", dir=none];
testAmbiguousPartialLongOption3 -> testMultipleWithLong [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testOptionGroup [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testUnambiguousPartialLongOption2 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> setUp [label=" options", dir=none];
testAmbiguousPartialLongOption3 -> testSimpleLong [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testUnambiguousPartialLongOption1 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testUnambiguousPartialLongOption4 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testMissingRequiredOptions [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testUnambiguousPartialLongOption3 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testNegativeOption [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testStopBursting2 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testDoubleDash2 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testDoubleDash1 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testUnrecognizedOption [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testAmbiguousPartialLongOption3 -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testMissingRequiredOption [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testMissingArgWithBursting [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testUnlimitedArgs [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testPropertiesOption1 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testPropertyOptionFlags [label=" parser", dir=none];
testAmbiguousPartialLongOption3 -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testMultiple [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testPropertiesOption2 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testOptionGroupLong [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testPropertyOptionGroup [label=" parser", dir=none];
testAmbiguousPartialLongOption3 -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testMissingRequiredGroup [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testBursting [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testShortWithEqual [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testSingleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testNegativeArgument [label=" parser, options", dir=none];
testAmbiguousPartialLongOption3 -> testReuseOptionsTwice [label=" parser", dir=none];
testAmbiguousPartialLongOption3 -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testPropertyOptionSingularValue -> testAmbiguousPartialLongOption2 [label=" parser", dir=none];
testPropertyOptionSingularValue -> testAmbiguousPartialLongOption1 [label=" parser", dir=none];
testPropertyOptionSingularValue -> testWithRequiredOption [label=" parser", dir=none];
testPropertyOptionSingularValue -> testMissingArg [label=" parser", dir=none];
testPropertyOptionSingularValue -> testPropertyOverrideValues [label=" parser", dir=none];
testPropertyOptionSingularValue -> testAmbiguousPartialLongOption4 [label=" parser", dir=none];
testPropertyOptionSingularValue -> testSimpleShort [label=" parser", dir=none];
testPropertyOptionSingularValue -> testPropertyOptionUnexpected [label=" parser", dir=none];
testPropertyOptionSingularValue -> testShortWithoutEqual [label=" parser", dir=none];
testPropertyOptionSingularValue -> testStopAtExpectedArg [label=" parser", dir=none];
testPropertyOptionSingularValue -> testStopBursting [label=" parser", dir=none];
testPropertyOptionSingularValue -> testLongOptionWithEqualsQuoteHandling [label=" parser", dir=none];
testPropertyOptionSingularValue -> testStopAtNonOptionShort [label=" parser", dir=none];
testPropertyOptionSingularValue -> testPropertyOptionRequired [label=" parser", dir=none];
testPropertyOptionSingularValue -> testMultipleWithLong [label=" parser", dir=none];
testPropertyOptionSingularValue -> testOptionGroup [label=" parser", dir=none];
testPropertyOptionSingularValue -> testUnambiguousPartialLongOption2 [label=" parser", dir=none];
testPropertyOptionSingularValue -> testSimpleLong [label=" parser", dir=none];
testPropertyOptionSingularValue -> testUnambiguousPartialLongOption1 [label=" parser", dir=none];
testPropertyOptionSingularValue -> testUnambiguousPartialLongOption4 [label=" parser", dir=none];
testPropertyOptionSingularValue -> testMissingRequiredOptions [label=" parser", dir=none];
testPropertyOptionSingularValue -> testUnambiguousPartialLongOption3 [label=" parser", dir=none];
testPropertyOptionSingularValue -> testNegativeOption [label=" parser", dir=none];
testPropertyOptionSingularValue -> testStopBursting2 [label=" parser", dir=none];
testPropertyOptionSingularValue -> testLongWithoutEqualSingleDash [label=" parser", dir=none];
testPropertyOptionSingularValue -> testDoubleDash2 [label=" parser", dir=none];
testPropertyOptionSingularValue -> testLongWithoutEqualDoubleDash [label=" parser", dir=none];
testPropertyOptionSingularValue -> testDoubleDash1 [label=" parser", dir=none];
testPropertyOptionSingularValue -> testUnrecognizedOption [label=" parser", dir=none];
testPropertyOptionSingularValue -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testPropertyOptionSingularValue -> testStopAtUnexpectedArg [label=" parser", dir=none];
testPropertyOptionSingularValue -> testMissingRequiredOption [label=" parser", dir=none];
testPropertyOptionSingularValue -> testMissingArgWithBursting [label=" parser", dir=none];
testPropertyOptionSingularValue -> testUnlimitedArgs [label=" parser", dir=none];
testPropertyOptionSingularValue -> testLongWithEqualSingleDash [label=" parser", dir=none];
testPropertyOptionSingularValue -> testPropertiesOption1 [label=" parser", dir=none];
testPropertyOptionSingularValue -> testPropertyOptionFlags [label=" parser", dir=none];
testPropertyOptionSingularValue -> testStopAtNonOptionLong [label=" parser", dir=none];
testPropertyOptionSingularValue -> testArgumentStartingWithHyphen [label=" parser", dir=none];
testPropertyOptionSingularValue -> testUnrecognizedOptionWithBursting [label=" parser", dir=none];
testPropertyOptionSingularValue -> testMultiple [label=" parser", dir=none];
testPropertyOptionSingularValue -> testPropertiesOption2 [label=" parser", dir=none];
testPropertyOptionSingularValue -> testOptionGroupLong [label=" parser", dir=none];
testPropertyOptionSingularValue -> testAmbiguousLongWithoutEqualSingleDash [label=" parser", dir=none];
testPropertyOptionSingularValue -> testPropertyOptionGroup [label=" parser", dir=none];
testPropertyOptionSingularValue -> testShortOptionQuoteHandling [label=" parser", dir=none];
testPropertyOptionSingularValue -> testLongOptionQuoteHandling [label=" parser", dir=none];
testPropertyOptionSingularValue -> testMissingRequiredGroup [label=" parser", dir=none];
testPropertyOptionSingularValue -> testBursting [label=" parser", dir=none];
testPropertyOptionSingularValue -> testShortWithEqual [label=" parser", dir=none];
testPropertyOptionSingularValue -> testOptionAndRequiredOption [label=" parser", dir=none];
testPropertyOptionSingularValue -> testShortOptionConcatenatedQuoteHandling [label=" parser", dir=none];
testPropertyOptionSingularValue -> testLongWithUnexpectedArgument2 [label=" parser", dir=none];
testPropertyOptionSingularValue -> testShortWithUnexpectedArgument [label=" parser", dir=none];
testPropertyOptionSingularValue -> testLongWithUnexpectedArgument1 [label=" parser", dir=none];
testPropertyOptionSingularValue -> testSingleDash [label=" parser", dir=none];
testPropertyOptionSingularValue -> testLongWithEqualDoubleDash [label=" parser", dir=none];
testPropertyOptionSingularValue -> testNegativeArgument [label=" parser", dir=none];
testPropertyOptionSingularValue -> testReuseOptionsTwice [label=" parser", dir=none];
testPropertyOptionSingularValue -> testPartialLongOptionSingleDash [label=" parser", dir=none];
testAmbiguousPartialLongOption2 -> testAmbiguousPartialLongOption1 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testWithRequiredOption [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testMissingArg [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testPropertyOverrideValues [label=" parser", dir=none];
testAmbiguousPartialLongOption2 -> testAmbiguousPartialLongOption4 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testSimpleShort [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testPropertyOptionUnexpected [label=" parser", dir=none];
testAmbiguousPartialLongOption2 -> testShortWithoutEqual [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testStopAtExpectedArg [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testStopBursting [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testLongOptionWithEqualsQuoteHandling [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testStopAtNonOptionShort [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testPropertyOptionRequired [label=" parser", dir=none];
testAmbiguousPartialLongOption2 -> testMultipleWithLong [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testOptionGroup [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testUnambiguousPartialLongOption2 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> setUp [label=" options", dir=none];
testAmbiguousPartialLongOption2 -> testSimpleLong [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testUnambiguousPartialLongOption1 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testUnambiguousPartialLongOption4 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testMissingRequiredOptions [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testUnambiguousPartialLongOption3 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testNegativeOption [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testStopBursting2 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testDoubleDash2 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testDoubleDash1 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testUnrecognizedOption [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testAmbiguousPartialLongOption2 -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testMissingRequiredOption [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testMissingArgWithBursting [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testUnlimitedArgs [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testPropertiesOption1 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testPropertyOptionFlags [label=" parser", dir=none];
testAmbiguousPartialLongOption2 -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testMultiple [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testPropertiesOption2 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testOptionGroupLong [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testPropertyOptionGroup [label=" parser", dir=none];
testAmbiguousPartialLongOption2 -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testMissingRequiredGroup [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testBursting [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testShortWithEqual [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testSingleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testNegativeArgument [label=" parser, options", dir=none];
testAmbiguousPartialLongOption2 -> testReuseOptionsTwice [label=" parser", dir=none];
testAmbiguousPartialLongOption2 -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testWithRequiredOption [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testMissingArg [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testPropertyOverrideValues [label=" parser", dir=none];
testAmbiguousPartialLongOption1 -> testAmbiguousPartialLongOption4 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testSimpleShort [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testPropertyOptionUnexpected [label=" parser", dir=none];
testAmbiguousPartialLongOption1 -> testShortWithoutEqual [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testStopAtExpectedArg [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testStopBursting [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testLongOptionWithEqualsQuoteHandling [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testStopAtNonOptionShort [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testPropertyOptionRequired [label=" parser", dir=none];
testAmbiguousPartialLongOption1 -> testMultipleWithLong [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testOptionGroup [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testUnambiguousPartialLongOption2 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> setUp [label=" options", dir=none];
testAmbiguousPartialLongOption1 -> testSimpleLong [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testUnambiguousPartialLongOption1 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testUnambiguousPartialLongOption4 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testMissingRequiredOptions [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testUnambiguousPartialLongOption3 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testNegativeOption [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testStopBursting2 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testDoubleDash2 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testDoubleDash1 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testUnrecognizedOption [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testAmbiguousPartialLongOption1 -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testMissingRequiredOption [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testMissingArgWithBursting [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testUnlimitedArgs [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testPropertiesOption1 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testPropertyOptionFlags [label=" parser", dir=none];
testAmbiguousPartialLongOption1 -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testMultiple [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testPropertiesOption2 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testOptionGroupLong [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testPropertyOptionGroup [label=" parser", dir=none];
testAmbiguousPartialLongOption1 -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testMissingRequiredGroup [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testBursting [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testShortWithEqual [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testSingleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testNegativeArgument [label=" parser, options", dir=none];
testAmbiguousPartialLongOption1 -> testReuseOptionsTwice [label=" parser", dir=none];
testAmbiguousPartialLongOption1 -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testWithRequiredOption -> testMissingArg [label=" parser, options", dir=none];
testWithRequiredOption -> testPropertyOverrideValues [label=" parser", dir=none];
testWithRequiredOption -> testAmbiguousPartialLongOption4 [label=" parser, options", dir=none];
testWithRequiredOption -> testSimpleShort [label=" parser, options", dir=none];
testWithRequiredOption -> testPropertyOptionUnexpected [label=" parser", dir=none];
testWithRequiredOption -> testShortWithoutEqual [label=" parser, options", dir=none];
testWithRequiredOption -> testStopAtExpectedArg [label=" parser, options", dir=none];
testWithRequiredOption -> testStopBursting [label=" parser, options", dir=none];
testWithRequiredOption -> testLongOptionWithEqualsQuoteHandling [label=" parser, options", dir=none];
testWithRequiredOption -> testStopAtNonOptionShort [label=" parser, options", dir=none];
testWithRequiredOption -> testPropertyOptionRequired [label=" parser", dir=none];
testWithRequiredOption -> testMultipleWithLong [label=" parser, options", dir=none];
testWithRequiredOption -> testOptionGroup [label=" parser, options", dir=none];
testWithRequiredOption -> testUnambiguousPartialLongOption2 [label=" parser, options", dir=none];
testWithRequiredOption -> setUp [label=" options", dir=none];
testWithRequiredOption -> testSimpleLong [label=" parser, options", dir=none];
testWithRequiredOption -> testUnambiguousPartialLongOption1 [label=" parser, options", dir=none];
testWithRequiredOption -> testUnambiguousPartialLongOption4 [label=" parser, options", dir=none];
testWithRequiredOption -> testMissingRequiredOptions [label=" parser, options", dir=none];
testWithRequiredOption -> testUnambiguousPartialLongOption3 [label=" parser, options", dir=none];
testWithRequiredOption -> testNegativeOption [label=" parser, options", dir=none];
testWithRequiredOption -> testStopBursting2 [label=" parser, options", dir=none];
testWithRequiredOption -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testWithRequiredOption -> testDoubleDash2 [label=" parser, options", dir=none];
testWithRequiredOption -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testWithRequiredOption -> testDoubleDash1 [label=" parser, options", dir=none];
testWithRequiredOption -> testUnrecognizedOption [label=" parser, options", dir=none];
testWithRequiredOption -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testWithRequiredOption -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testWithRequiredOption -> testMissingRequiredOption [label=" parser, options", dir=none];
testWithRequiredOption -> testMissingArgWithBursting [label=" parser, options", dir=none];
testWithRequiredOption -> testUnlimitedArgs [label=" parser, options", dir=none];
testWithRequiredOption -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testWithRequiredOption -> testPropertiesOption1 [label=" parser, options", dir=none];
testWithRequiredOption -> testPropertyOptionFlags [label=" parser", dir=none];
testWithRequiredOption -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testWithRequiredOption -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testWithRequiredOption -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testWithRequiredOption -> testMultiple [label=" parser, options", dir=none];
testWithRequiredOption -> testPropertiesOption2 [label=" parser, options", dir=none];
testWithRequiredOption -> testOptionGroupLong [label=" parser, options", dir=none];
testWithRequiredOption -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testWithRequiredOption -> testPropertyOptionGroup [label=" parser", dir=none];
testWithRequiredOption -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testWithRequiredOption -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testWithRequiredOption -> testMissingRequiredGroup [label=" parser, options", dir=none];
testWithRequiredOption -> testBursting [label=" parser, options", dir=none];
testWithRequiredOption -> testShortWithEqual [label=" parser, options", dir=none];
testWithRequiredOption -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testWithRequiredOption -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testWithRequiredOption -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testWithRequiredOption -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testWithRequiredOption -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testWithRequiredOption -> testSingleDash [label=" parser, options", dir=none];
testWithRequiredOption -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testWithRequiredOption -> testNegativeArgument [label=" parser, options", dir=none];
testWithRequiredOption -> testReuseOptionsTwice [label=" parser", dir=none];
testWithRequiredOption -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testMissingArg -> testPropertyOverrideValues [label=" parser", dir=none];
testMissingArg -> testAmbiguousPartialLongOption4 [label=" parser, options", dir=none];
testMissingArg -> testSimpleShort [label=" parser, options", dir=none];
testMissingArg -> testPropertyOptionUnexpected [label=" parser", dir=none];
testMissingArg -> testShortWithoutEqual [label=" parser, options", dir=none];
testMissingArg -> testStopAtExpectedArg [label=" parser, options", dir=none];
testMissingArg -> testStopBursting [label=" parser, options", dir=none];
testMissingArg -> testLongOptionWithEqualsQuoteHandling [label=" parser, options", dir=none];
testMissingArg -> testStopAtNonOptionShort [label=" parser, options", dir=none];
testMissingArg -> testPropertyOptionRequired [label=" parser", dir=none];
testMissingArg -> testMultipleWithLong [label=" parser, options", dir=none];
testMissingArg -> testOptionGroup [label=" parser, options", dir=none];
testMissingArg -> testUnambiguousPartialLongOption2 [label=" parser, options", dir=none];
testMissingArg -> setUp [label=" options", dir=none];
testMissingArg -> testSimpleLong [label=" parser, options", dir=none];
testMissingArg -> testUnambiguousPartialLongOption1 [label=" parser, options", dir=none];
testMissingArg -> testUnambiguousPartialLongOption4 [label=" parser, options", dir=none];
testMissingArg -> testMissingRequiredOptions [label=" parser, options", dir=none];
testMissingArg -> testUnambiguousPartialLongOption3 [label=" parser, options", dir=none];
testMissingArg -> testNegativeOption [label=" parser, options", dir=none];
testMissingArg -> testStopBursting2 [label=" parser, options", dir=none];
testMissingArg -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testMissingArg -> testDoubleDash2 [label=" parser, options", dir=none];
testMissingArg -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testMissingArg -> testDoubleDash1 [label=" parser, options", dir=none];
testMissingArg -> testUnrecognizedOption [label=" parser, options", dir=none];
testMissingArg -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testMissingArg -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testMissingArg -> testMissingRequiredOption [label=" parser, options", dir=none];
testMissingArg -> testMissingArgWithBursting [label=" parser, options", dir=none];
testMissingArg -> testUnlimitedArgs [label=" parser, options", dir=none];
testMissingArg -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testMissingArg -> testPropertiesOption1 [label=" parser, options", dir=none];
testMissingArg -> testPropertyOptionFlags [label=" parser", dir=none];
testMissingArg -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testMissingArg -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testMissingArg -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testMissingArg -> testMultiple [label=" parser, options", dir=none];
testMissingArg -> testPropertiesOption2 [label=" parser, options", dir=none];
testMissingArg -> testOptionGroupLong [label=" parser, options", dir=none];
testMissingArg -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testMissingArg -> testPropertyOptionGroup [label=" parser", dir=none];
testMissingArg -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testMissingArg -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testMissingArg -> testMissingRequiredGroup [label=" parser, options", dir=none];
testMissingArg -> testBursting [label=" parser, options", dir=none];
testMissingArg -> testShortWithEqual [label=" parser, options", dir=none];
testMissingArg -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testMissingArg -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testMissingArg -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testMissingArg -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testMissingArg -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testMissingArg -> testSingleDash [label=" parser, options", dir=none];
testMissingArg -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testMissingArg -> testNegativeArgument [label=" parser, options", dir=none];
testMissingArg -> testReuseOptionsTwice [label=" parser", dir=none];
testMissingArg -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testPropertyOverrideValues -> testAmbiguousPartialLongOption4 [label=" parser", dir=none];
testPropertyOverrideValues -> testSimpleShort [label=" parser", dir=none];
testPropertyOverrideValues -> testPropertyOptionUnexpected [label=" parser", dir=none];
testPropertyOverrideValues -> testShortWithoutEqual [label=" parser", dir=none];
testPropertyOverrideValues -> testStopAtExpectedArg [label=" parser", dir=none];
testPropertyOverrideValues -> testStopBursting [label=" parser", dir=none];
testPropertyOverrideValues -> testLongOptionWithEqualsQuoteHandling [label=" parser", dir=none];
testPropertyOverrideValues -> testStopAtNonOptionShort [label=" parser", dir=none];
testPropertyOverrideValues -> testPropertyOptionRequired [label=" parser", dir=none];
testPropertyOverrideValues -> testMultipleWithLong [label=" parser", dir=none];
testPropertyOverrideValues -> testOptionGroup [label=" parser", dir=none];
testPropertyOverrideValues -> testUnambiguousPartialLongOption2 [label=" parser", dir=none];
testPropertyOverrideValues -> testSimpleLong [label=" parser", dir=none];
testPropertyOverrideValues -> testUnambiguousPartialLongOption1 [label=" parser", dir=none];
testPropertyOverrideValues -> testUnambiguousPartialLongOption4 [label=" parser", dir=none];
testPropertyOverrideValues -> testMissingRequiredOptions [label=" parser", dir=none];
testPropertyOverrideValues -> testUnambiguousPartialLongOption3 [label=" parser", dir=none];
testPropertyOverrideValues -> testNegativeOption [label=" parser", dir=none];
testPropertyOverrideValues -> testStopBursting2 [label=" parser", dir=none];
testPropertyOverrideValues -> testLongWithoutEqualSingleDash [label=" parser", dir=none];
testPropertyOverrideValues -> testDoubleDash2 [label=" parser", dir=none];
testPropertyOverrideValues -> testLongWithoutEqualDoubleDash [label=" parser", dir=none];
testPropertyOverrideValues -> testDoubleDash1 [label=" parser", dir=none];
testPropertyOverrideValues -> testUnrecognizedOption [label=" parser", dir=none];
testPropertyOverrideValues -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testPropertyOverrideValues -> testStopAtUnexpectedArg [label=" parser", dir=none];
testPropertyOverrideValues -> testMissingRequiredOption [label=" parser", dir=none];
testPropertyOverrideValues -> testMissingArgWithBursting [label=" parser", dir=none];
testPropertyOverrideValues -> testUnlimitedArgs [label=" parser", dir=none];
testPropertyOverrideValues -> testLongWithEqualSingleDash [label=" parser", dir=none];
testPropertyOverrideValues -> testPropertiesOption1 [label=" parser", dir=none];
testPropertyOverrideValues -> testPropertyOptionFlags [label=" parser", dir=none];
testPropertyOverrideValues -> testStopAtNonOptionLong [label=" parser", dir=none];
testPropertyOverrideValues -> testArgumentStartingWithHyphen [label=" parser", dir=none];
testPropertyOverrideValues -> testUnrecognizedOptionWithBursting [label=" parser", dir=none];
testPropertyOverrideValues -> testMultiple [label=" parser", dir=none];
testPropertyOverrideValues -> testPropertiesOption2 [label=" parser", dir=none];
testPropertyOverrideValues -> testOptionGroupLong [label=" parser", dir=none];
testPropertyOverrideValues -> testAmbiguousLongWithoutEqualSingleDash [label=" parser", dir=none];
testPropertyOverrideValues -> testPropertyOptionGroup [label=" parser", dir=none];
testPropertyOverrideValues -> testShortOptionQuoteHandling [label=" parser", dir=none];
testPropertyOverrideValues -> testLongOptionQuoteHandling [label=" parser", dir=none];
testPropertyOverrideValues -> testMissingRequiredGroup [label=" parser", dir=none];
testPropertyOverrideValues -> testBursting [label=" parser", dir=none];
testPropertyOverrideValues -> testShortWithEqual [label=" parser", dir=none];
testPropertyOverrideValues -> testOptionAndRequiredOption [label=" parser", dir=none];
testPropertyOverrideValues -> testShortOptionConcatenatedQuoteHandling [label=" parser", dir=none];
testPropertyOverrideValues -> testLongWithUnexpectedArgument2 [label=" parser", dir=none];
testPropertyOverrideValues -> testShortWithUnexpectedArgument [label=" parser", dir=none];
testPropertyOverrideValues -> testLongWithUnexpectedArgument1 [label=" parser", dir=none];
testPropertyOverrideValues -> testSingleDash [label=" parser", dir=none];
testPropertyOverrideValues -> testLongWithEqualDoubleDash [label=" parser", dir=none];
testPropertyOverrideValues -> testNegativeArgument [label=" parser", dir=none];
testPropertyOverrideValues -> testReuseOptionsTwice [label=" parser", dir=none];
testPropertyOverrideValues -> testPartialLongOptionSingleDash [label=" parser", dir=none];
testAmbiguousPartialLongOption4 -> testSimpleShort [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testPropertyOptionUnexpected [label=" parser", dir=none];
testAmbiguousPartialLongOption4 -> testShortWithoutEqual [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testStopAtExpectedArg [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testStopBursting [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testLongOptionWithEqualsQuoteHandling [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testStopAtNonOptionShort [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testPropertyOptionRequired [label=" parser", dir=none];
testAmbiguousPartialLongOption4 -> testMultipleWithLong [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testOptionGroup [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testUnambiguousPartialLongOption2 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> setUp [label=" options", dir=none];
testAmbiguousPartialLongOption4 -> testSimpleLong [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testUnambiguousPartialLongOption1 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testUnambiguousPartialLongOption4 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testMissingRequiredOptions [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testUnambiguousPartialLongOption3 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testNegativeOption [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testStopBursting2 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testDoubleDash2 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testDoubleDash1 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testUnrecognizedOption [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testAmbiguousPartialLongOption4 -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testMissingRequiredOption [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testMissingArgWithBursting [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testUnlimitedArgs [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testPropertiesOption1 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testPropertyOptionFlags [label=" parser", dir=none];
testAmbiguousPartialLongOption4 -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testMultiple [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testPropertiesOption2 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testOptionGroupLong [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testPropertyOptionGroup [label=" parser", dir=none];
testAmbiguousPartialLongOption4 -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testMissingRequiredGroup [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testBursting [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testShortWithEqual [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testSingleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testNegativeArgument [label=" parser, options", dir=none];
testAmbiguousPartialLongOption4 -> testReuseOptionsTwice [label=" parser", dir=none];
testAmbiguousPartialLongOption4 -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testSimpleShort -> testPropertyOptionUnexpected [label=" parser", dir=none];
testSimpleShort -> testShortWithoutEqual [label=" parser, options", dir=none];
testSimpleShort -> testStopAtExpectedArg [label=" parser, options", dir=none];
testSimpleShort -> testStopBursting [label=" parser, options", dir=none];
testSimpleShort -> testLongOptionWithEqualsQuoteHandling [label=" parser, options", dir=none];
testSimpleShort -> testStopAtNonOptionShort [label=" parser, options", dir=none];
testSimpleShort -> testPropertyOptionRequired [label=" parser", dir=none];
testSimpleShort -> testMultipleWithLong [label=" parser, options", dir=none];
testSimpleShort -> testOptionGroup [label=" parser, options", dir=none];
testSimpleShort -> testUnambiguousPartialLongOption2 [label=" parser, options", dir=none];
testSimpleShort -> setUp [label=" options", dir=none];
testSimpleShort -> testSimpleLong [label=" parser, options", dir=none];
testSimpleShort -> testUnambiguousPartialLongOption1 [label=" parser, options", dir=none];
testSimpleShort -> testUnambiguousPartialLongOption4 [label=" parser, options", dir=none];
testSimpleShort -> testMissingRequiredOptions [label=" parser, options", dir=none];
testSimpleShort -> testUnambiguousPartialLongOption3 [label=" parser, options", dir=none];
testSimpleShort -> testNegativeOption [label=" parser, options", dir=none];
testSimpleShort -> testStopBursting2 [label=" parser, options", dir=none];
testSimpleShort -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testSimpleShort -> testDoubleDash2 [label=" parser, options", dir=none];
testSimpleShort -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testSimpleShort -> testDoubleDash1 [label=" parser, options", dir=none];
testSimpleShort -> testUnrecognizedOption [label=" parser, options", dir=none];
testSimpleShort -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testSimpleShort -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testSimpleShort -> testMissingRequiredOption [label=" parser, options", dir=none];
testSimpleShort -> testMissingArgWithBursting [label=" parser, options", dir=none];
testSimpleShort -> testUnlimitedArgs [label=" parser, options", dir=none];
testSimpleShort -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testSimpleShort -> testPropertiesOption1 [label=" parser, options", dir=none];
testSimpleShort -> testPropertyOptionFlags [label=" parser", dir=none];
testSimpleShort -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testSimpleShort -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testSimpleShort -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testSimpleShort -> testMultiple [label=" parser, options", dir=none];
testSimpleShort -> testPropertiesOption2 [label=" parser, options", dir=none];
testSimpleShort -> testOptionGroupLong [label=" parser, options", dir=none];
testSimpleShort -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testSimpleShort -> testPropertyOptionGroup [label=" parser", dir=none];
testSimpleShort -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testSimpleShort -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testSimpleShort -> testMissingRequiredGroup [label=" parser, options", dir=none];
testSimpleShort -> testBursting [label=" parser, options", dir=none];
testSimpleShort -> testShortWithEqual [label=" parser, options", dir=none];
testSimpleShort -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testSimpleShort -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testSimpleShort -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testSimpleShort -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testSimpleShort -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testSimpleShort -> testSingleDash [label=" parser, options", dir=none];
testSimpleShort -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testSimpleShort -> testNegativeArgument [label=" parser, options", dir=none];
testSimpleShort -> testReuseOptionsTwice [label=" parser", dir=none];
testSimpleShort -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testPropertyOptionUnexpected -> testShortWithoutEqual [label=" parser", dir=none];
testPropertyOptionUnexpected -> testStopAtExpectedArg [label=" parser", dir=none];
testPropertyOptionUnexpected -> testStopBursting [label=" parser", dir=none];
testPropertyOptionUnexpected -> testLongOptionWithEqualsQuoteHandling [label=" parser", dir=none];
testPropertyOptionUnexpected -> testStopAtNonOptionShort [label=" parser", dir=none];
testPropertyOptionUnexpected -> testPropertyOptionRequired [label=" parser", dir=none];
testPropertyOptionUnexpected -> testMultipleWithLong [label=" parser", dir=none];
testPropertyOptionUnexpected -> testOptionGroup [label=" parser", dir=none];
testPropertyOptionUnexpected -> testUnambiguousPartialLongOption2 [label=" parser", dir=none];
testPropertyOptionUnexpected -> testSimpleLong [label=" parser", dir=none];
testPropertyOptionUnexpected -> testUnambiguousPartialLongOption1 [label=" parser", dir=none];
testPropertyOptionUnexpected -> testUnambiguousPartialLongOption4 [label=" parser", dir=none];
testPropertyOptionUnexpected -> testMissingRequiredOptions [label=" parser", dir=none];
testPropertyOptionUnexpected -> testUnambiguousPartialLongOption3 [label=" parser", dir=none];
testPropertyOptionUnexpected -> testNegativeOption [label=" parser", dir=none];
testPropertyOptionUnexpected -> testStopBursting2 [label=" parser", dir=none];
testPropertyOptionUnexpected -> testLongWithoutEqualSingleDash [label=" parser", dir=none];
testPropertyOptionUnexpected -> testDoubleDash2 [label=" parser", dir=none];
testPropertyOptionUnexpected -> testLongWithoutEqualDoubleDash [label=" parser", dir=none];
testPropertyOptionUnexpected -> testDoubleDash1 [label=" parser", dir=none];
testPropertyOptionUnexpected -> testUnrecognizedOption [label=" parser", dir=none];
testPropertyOptionUnexpected -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testPropertyOptionUnexpected -> testStopAtUnexpectedArg [label=" parser", dir=none];
testPropertyOptionUnexpected -> testMissingRequiredOption [label=" parser", dir=none];
testPropertyOptionUnexpected -> testMissingArgWithBursting [label=" parser", dir=none];
testPropertyOptionUnexpected -> testUnlimitedArgs [label=" parser", dir=none];
testPropertyOptionUnexpected -> testLongWithEqualSingleDash [label=" parser", dir=none];
testPropertyOptionUnexpected -> testPropertiesOption1 [label=" parser", dir=none];
testPropertyOptionUnexpected -> testPropertyOptionFlags [label=" parser", dir=none];
testPropertyOptionUnexpected -> testStopAtNonOptionLong [label=" parser", dir=none];
testPropertyOptionUnexpected -> testArgumentStartingWithHyphen [label=" parser", dir=none];
testPropertyOptionUnexpected -> testUnrecognizedOptionWithBursting [label=" parser", dir=none];
testPropertyOptionUnexpected -> testMultiple [label=" parser", dir=none];
testPropertyOptionUnexpected -> testPropertiesOption2 [label=" parser", dir=none];
testPropertyOptionUnexpected -> testOptionGroupLong [label=" parser", dir=none];
testPropertyOptionUnexpected -> testAmbiguousLongWithoutEqualSingleDash [label=" parser", dir=none];
testPropertyOptionUnexpected -> testPropertyOptionGroup [label=" parser", dir=none];
testPropertyOptionUnexpected -> testShortOptionQuoteHandling [label=" parser", dir=none];
testPropertyOptionUnexpected -> testLongOptionQuoteHandling [label=" parser", dir=none];
testPropertyOptionUnexpected -> testMissingRequiredGroup [label=" parser", dir=none];
testPropertyOptionUnexpected -> testBursting [label=" parser", dir=none];
testPropertyOptionUnexpected -> testShortWithEqual [label=" parser", dir=none];
testPropertyOptionUnexpected -> testOptionAndRequiredOption [label=" parser", dir=none];
testPropertyOptionUnexpected -> testShortOptionConcatenatedQuoteHandling [label=" parser", dir=none];
testPropertyOptionUnexpected -> testLongWithUnexpectedArgument2 [label=" parser", dir=none];
testPropertyOptionUnexpected -> testShortWithUnexpectedArgument [label=" parser", dir=none];
testPropertyOptionUnexpected -> testLongWithUnexpectedArgument1 [label=" parser", dir=none];
testPropertyOptionUnexpected -> testSingleDash [label=" parser", dir=none];
testPropertyOptionUnexpected -> testLongWithEqualDoubleDash [label=" parser", dir=none];
testPropertyOptionUnexpected -> testNegativeArgument [label=" parser", dir=none];
testPropertyOptionUnexpected -> testReuseOptionsTwice [label=" parser", dir=none];
testPropertyOptionUnexpected -> testPartialLongOptionSingleDash [label=" parser", dir=none];
testShortWithoutEqual -> testStopAtExpectedArg [label=" parser, options", dir=none];
testShortWithoutEqual -> testStopBursting [label=" parser, options", dir=none];
testShortWithoutEqual -> testLongOptionWithEqualsQuoteHandling [label=" parser, options", dir=none];
testShortWithoutEqual -> testStopAtNonOptionShort [label=" parser, options", dir=none];
testShortWithoutEqual -> testPropertyOptionRequired [label=" parser", dir=none];
testShortWithoutEqual -> testMultipleWithLong [label=" parser, options", dir=none];
testShortWithoutEqual -> testOptionGroup [label=" parser, options", dir=none];
testShortWithoutEqual -> testUnambiguousPartialLongOption2 [label=" parser, options", dir=none];
testShortWithoutEqual -> setUp [label=" options", dir=none];
testShortWithoutEqual -> testSimpleLong [label=" parser, options", dir=none];
testShortWithoutEqual -> testUnambiguousPartialLongOption1 [label=" parser, options", dir=none];
testShortWithoutEqual -> testUnambiguousPartialLongOption4 [label=" parser, options", dir=none];
testShortWithoutEqual -> testMissingRequiredOptions [label=" parser, options", dir=none];
testShortWithoutEqual -> testUnambiguousPartialLongOption3 [label=" parser, options", dir=none];
testShortWithoutEqual -> testNegativeOption [label=" parser, options", dir=none];
testShortWithoutEqual -> testStopBursting2 [label=" parser, options", dir=none];
testShortWithoutEqual -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testShortWithoutEqual -> testDoubleDash2 [label=" parser, options", dir=none];
testShortWithoutEqual -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testShortWithoutEqual -> testDoubleDash1 [label=" parser, options", dir=none];
testShortWithoutEqual -> testUnrecognizedOption [label=" parser, options", dir=none];
testShortWithoutEqual -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testShortWithoutEqual -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testShortWithoutEqual -> testMissingRequiredOption [label=" parser, options", dir=none];
testShortWithoutEqual -> testMissingArgWithBursting [label=" parser, options", dir=none];
testShortWithoutEqual -> testUnlimitedArgs [label=" parser, options", dir=none];
testShortWithoutEqual -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testShortWithoutEqual -> testPropertiesOption1 [label=" parser, options", dir=none];
testShortWithoutEqual -> testPropertyOptionFlags [label=" parser", dir=none];
testShortWithoutEqual -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testShortWithoutEqual -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testShortWithoutEqual -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testShortWithoutEqual -> testMultiple [label=" parser, options", dir=none];
testShortWithoutEqual -> testPropertiesOption2 [label=" parser, options", dir=none];
testShortWithoutEqual -> testOptionGroupLong [label=" parser, options", dir=none];
testShortWithoutEqual -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testShortWithoutEqual -> testPropertyOptionGroup [label=" parser", dir=none];
testShortWithoutEqual -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testShortWithoutEqual -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testShortWithoutEqual -> testMissingRequiredGroup [label=" parser, options", dir=none];
testShortWithoutEqual -> testBursting [label=" parser, options", dir=none];
testShortWithoutEqual -> testShortWithEqual [label=" parser, options", dir=none];
testShortWithoutEqual -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testShortWithoutEqual -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testShortWithoutEqual -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testShortWithoutEqual -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testShortWithoutEqual -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testShortWithoutEqual -> testSingleDash [label=" parser, options", dir=none];
testShortWithoutEqual -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testShortWithoutEqual -> testNegativeArgument [label=" parser, options", dir=none];
testShortWithoutEqual -> testReuseOptionsTwice [label=" parser", dir=none];
testShortWithoutEqual -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testStopAtExpectedArg -> testStopBursting [label=" parser, options", dir=none];
testStopAtExpectedArg -> testLongOptionWithEqualsQuoteHandling [label=" parser, options", dir=none];
testStopAtExpectedArg -> testStopAtNonOptionShort [label=" parser, options", dir=none];
testStopAtExpectedArg -> testPropertyOptionRequired [label=" parser", dir=none];
testStopAtExpectedArg -> testMultipleWithLong [label=" parser, options", dir=none];
testStopAtExpectedArg -> testOptionGroup [label=" parser, options", dir=none];
testStopAtExpectedArg -> testUnambiguousPartialLongOption2 [label=" parser, options", dir=none];
testStopAtExpectedArg -> setUp [label=" options", dir=none];
testStopAtExpectedArg -> testSimpleLong [label=" parser, options", dir=none];
testStopAtExpectedArg -> testUnambiguousPartialLongOption1 [label=" parser, options", dir=none];
testStopAtExpectedArg -> testUnambiguousPartialLongOption4 [label=" parser, options", dir=none];
testStopAtExpectedArg -> testMissingRequiredOptions [label=" parser, options", dir=none];
testStopAtExpectedArg -> testUnambiguousPartialLongOption3 [label=" parser, options", dir=none];
testStopAtExpectedArg -> testNegativeOption [label=" parser, options", dir=none];
testStopAtExpectedArg -> testStopBursting2 [label=" parser, options", dir=none];
testStopAtExpectedArg -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testStopAtExpectedArg -> testDoubleDash2 [label=" parser, options", dir=none];
testStopAtExpectedArg -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testStopAtExpectedArg -> testDoubleDash1 [label=" parser, options", dir=none];
testStopAtExpectedArg -> testUnrecognizedOption [label=" parser, options", dir=none];
testStopAtExpectedArg -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testStopAtExpectedArg -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testStopAtExpectedArg -> testMissingRequiredOption [label=" parser, options", dir=none];
testStopAtExpectedArg -> testMissingArgWithBursting [label=" parser, options", dir=none];
testStopAtExpectedArg -> testUnlimitedArgs [label=" parser, options", dir=none];
testStopAtExpectedArg -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testStopAtExpectedArg -> testPropertiesOption1 [label=" parser, options", dir=none];
testStopAtExpectedArg -> testPropertyOptionFlags [label=" parser", dir=none];
testStopAtExpectedArg -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testStopAtExpectedArg -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testStopAtExpectedArg -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testStopAtExpectedArg -> testMultiple [label=" parser, options", dir=none];
testStopAtExpectedArg -> testPropertiesOption2 [label=" parser, options", dir=none];
testStopAtExpectedArg -> testOptionGroupLong [label=" parser, options", dir=none];
testStopAtExpectedArg -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testStopAtExpectedArg -> testPropertyOptionGroup [label=" parser", dir=none];
testStopAtExpectedArg -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testStopAtExpectedArg -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testStopAtExpectedArg -> testMissingRequiredGroup [label=" parser, options", dir=none];
testStopAtExpectedArg -> testBursting [label=" parser, options", dir=none];
testStopAtExpectedArg -> testShortWithEqual [label=" parser, options", dir=none];
testStopAtExpectedArg -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testStopAtExpectedArg -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testStopAtExpectedArg -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testStopAtExpectedArg -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testStopAtExpectedArg -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testStopAtExpectedArg -> testSingleDash [label=" parser, options", dir=none];
testStopAtExpectedArg -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testStopAtExpectedArg -> testNegativeArgument [label=" parser, options", dir=none];
testStopAtExpectedArg -> testReuseOptionsTwice [label=" parser", dir=none];
testStopAtExpectedArg -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testStopBursting -> testLongOptionWithEqualsQuoteHandling [label=" parser, options", dir=none];
testStopBursting -> testStopAtNonOptionShort [label=" parser, options", dir=none];
testStopBursting -> testPropertyOptionRequired [label=" parser", dir=none];
testStopBursting -> testMultipleWithLong [label=" parser, options", dir=none];
testStopBursting -> testOptionGroup [label=" parser, options", dir=none];
testStopBursting -> testUnambiguousPartialLongOption2 [label=" parser, options", dir=none];
testStopBursting -> setUp [label=" options", dir=none];
testStopBursting -> testSimpleLong [label=" parser, options", dir=none];
testStopBursting -> testUnambiguousPartialLongOption1 [label=" parser, options", dir=none];
testStopBursting -> testUnambiguousPartialLongOption4 [label=" parser, options", dir=none];
testStopBursting -> testMissingRequiredOptions [label=" parser, options", dir=none];
testStopBursting -> testUnambiguousPartialLongOption3 [label=" parser, options", dir=none];
testStopBursting -> testNegativeOption [label=" parser, options", dir=none];
testStopBursting -> testStopBursting2 [label=" parser, options", dir=none];
testStopBursting -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testStopBursting -> testDoubleDash2 [label=" parser, options", dir=none];
testStopBursting -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testStopBursting -> testDoubleDash1 [label=" parser, options", dir=none];
testStopBursting -> testUnrecognizedOption [label=" parser, options", dir=none];
testStopBursting -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testStopBursting -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testStopBursting -> testMissingRequiredOption [label=" parser, options", dir=none];
testStopBursting -> testMissingArgWithBursting [label=" parser, options", dir=none];
testStopBursting -> testUnlimitedArgs [label=" parser, options", dir=none];
testStopBursting -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testStopBursting -> testPropertiesOption1 [label=" parser, options", dir=none];
testStopBursting -> testPropertyOptionFlags [label=" parser", dir=none];
testStopBursting -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testStopBursting -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testStopBursting -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testStopBursting -> testMultiple [label=" parser, options", dir=none];
testStopBursting -> testPropertiesOption2 [label=" parser, options", dir=none];
testStopBursting -> testOptionGroupLong [label=" parser, options", dir=none];
testStopBursting -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testStopBursting -> testPropertyOptionGroup [label=" parser", dir=none];
testStopBursting -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testStopBursting -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testStopBursting -> testMissingRequiredGroup [label=" parser, options", dir=none];
testStopBursting -> testBursting [label=" parser, options", dir=none];
testStopBursting -> testShortWithEqual [label=" parser, options", dir=none];
testStopBursting -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testStopBursting -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testStopBursting -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testStopBursting -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testStopBursting -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testStopBursting -> testSingleDash [label=" parser, options", dir=none];
testStopBursting -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testStopBursting -> testNegativeArgument [label=" parser, options", dir=none];
testStopBursting -> testReuseOptionsTwice [label=" parser", dir=none];
testStopBursting -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testStopAtNonOptionShort [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testPropertyOptionRequired [label=" parser", dir=none];
testLongOptionWithEqualsQuoteHandling -> testMultipleWithLong [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testOptionGroup [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testUnambiguousPartialLongOption2 [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> setUp [label=" options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testSimpleLong [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testUnambiguousPartialLongOption1 [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testUnambiguousPartialLongOption4 [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testMissingRequiredOptions [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testUnambiguousPartialLongOption3 [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testNegativeOption [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testStopBursting2 [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testDoubleDash2 [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testDoubleDash1 [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testUnrecognizedOption [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testLongOptionWithEqualsQuoteHandling -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testMissingRequiredOption [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testMissingArgWithBursting [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testUnlimitedArgs [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testPropertiesOption1 [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testPropertyOptionFlags [label=" parser", dir=none];
testLongOptionWithEqualsQuoteHandling -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testMultiple [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testPropertiesOption2 [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testOptionGroupLong [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testPropertyOptionGroup [label=" parser", dir=none];
testLongOptionWithEqualsQuoteHandling -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testMissingRequiredGroup [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testBursting [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testShortWithEqual [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testSingleDash [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testNegativeArgument [label=" parser, options", dir=none];
testLongOptionWithEqualsQuoteHandling -> testReuseOptionsTwice [label=" parser", dir=none];
testLongOptionWithEqualsQuoteHandling -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testPropertiesOption1 [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testPropertyOptionFlags [label=" parser", dir=none];
testStopAtNonOptionShort -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testMultiple [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testPropertiesOption2 [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testOptionGroupLong [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testPropertyOptionRequired [label=" parser", dir=none];
testStopAtNonOptionShort -> testMultipleWithLong [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testOptionGroup [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testUnambiguousPartialLongOption2 [label=" parser, options", dir=none];
testStopAtNonOptionShort -> setUp [label=" options", dir=none];
testStopAtNonOptionShort -> testSimpleLong [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testUnambiguousPartialLongOption1 [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testUnambiguousPartialLongOption4 [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testPropertyOptionGroup [label=" parser", dir=none];
testStopAtNonOptionShort -> testMissingRequiredOptions [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testUnambiguousPartialLongOption3 [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testNegativeOption [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testStopBursting2 [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testDoubleDash2 [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testDoubleDash1 [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testMissingRequiredGroup [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testUnrecognizedOption [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testBursting [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testShortWithEqual [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testSingleDash [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testStopAtNonOptionShort -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testNegativeArgument [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testReuseOptionsTwice [label=" parser", dir=none];
testStopAtNonOptionShort -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testMissingRequiredOption [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testMissingArgWithBursting [label=" parser, options", dir=none];
testStopAtNonOptionShort -> testUnlimitedArgs [label=" parser, options", dir=none];
testPropertyOptionRequired -> testLongWithEqualSingleDash [label=" parser", dir=none];
testPropertyOptionRequired -> testPropertiesOption1 [label=" parser", dir=none];
testPropertyOptionRequired -> testPropertyOptionFlags [label=" parser", dir=none];
testPropertyOptionRequired -> testStopAtNonOptionLong [label=" parser", dir=none];
testPropertyOptionRequired -> testArgumentStartingWithHyphen [label=" parser", dir=none];
testPropertyOptionRequired -> testUnrecognizedOptionWithBursting [label=" parser", dir=none];
testPropertyOptionRequired -> testMultiple [label=" parser", dir=none];
testPropertyOptionRequired -> testPropertiesOption2 [label=" parser", dir=none];
testPropertyOptionRequired -> testOptionGroupLong [label=" parser", dir=none];
testPropertyOptionRequired -> testAmbiguousLongWithoutEqualSingleDash [label=" parser", dir=none];
testPropertyOptionRequired -> testMultipleWithLong [label=" parser", dir=none];
testPropertyOptionRequired -> testOptionGroup [label=" parser", dir=none];
testPropertyOptionRequired -> testUnambiguousPartialLongOption2 [label=" parser", dir=none];
testPropertyOptionRequired -> testSimpleLong [label=" parser", dir=none];
testPropertyOptionRequired -> testUnambiguousPartialLongOption1 [label=" parser", dir=none];
testPropertyOptionRequired -> testUnambiguousPartialLongOption4 [label=" parser", dir=none];
testPropertyOptionRequired -> testPropertyOptionGroup [label=" parser", dir=none];
testPropertyOptionRequired -> testMissingRequiredOptions [label=" parser", dir=none];
testPropertyOptionRequired -> testUnambiguousPartialLongOption3 [label=" parser", dir=none];
testPropertyOptionRequired -> testNegativeOption [label=" parser", dir=none];
testPropertyOptionRequired -> testStopBursting2 [label=" parser", dir=none];
testPropertyOptionRequired -> testLongWithoutEqualSingleDash [label=" parser", dir=none];
testPropertyOptionRequired -> testShortOptionQuoteHandling [label=" parser", dir=none];
testPropertyOptionRequired -> testLongOptionQuoteHandling [label=" parser", dir=none];
testPropertyOptionRequired -> testDoubleDash2 [label=" parser", dir=none];
testPropertyOptionRequired -> testLongWithoutEqualDoubleDash [label=" parser", dir=none];
testPropertyOptionRequired -> testDoubleDash1 [label=" parser", dir=none];
testPropertyOptionRequired -> testMissingRequiredGroup [label=" parser", dir=none];
testPropertyOptionRequired -> testUnrecognizedOption [label=" parser", dir=none];
testPropertyOptionRequired -> testBursting [label=" parser", dir=none];
testPropertyOptionRequired -> testShortWithEqual [label=" parser", dir=none];
testPropertyOptionRequired -> testOptionAndRequiredOption [label=" parser", dir=none];
testPropertyOptionRequired -> testShortOptionConcatenatedQuoteHandling [label=" parser", dir=none];
testPropertyOptionRequired -> testLongWithUnexpectedArgument2 [label=" parser", dir=none];
testPropertyOptionRequired -> testShortWithUnexpectedArgument [label=" parser", dir=none];
testPropertyOptionRequired -> testLongWithUnexpectedArgument1 [label=" parser", dir=none];
testPropertyOptionRequired -> testSingleDash [label=" parser", dir=none];
testPropertyOptionRequired -> testLongWithEqualDoubleDash [label=" parser", dir=none];
testPropertyOptionRequired -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testPropertyOptionRequired -> testStopAtUnexpectedArg [label=" parser", dir=none];
testPropertyOptionRequired -> testNegativeArgument [label=" parser", dir=none];
testPropertyOptionRequired -> testReuseOptionsTwice [label=" parser", dir=none];
testPropertyOptionRequired -> testPartialLongOptionSingleDash [label=" parser", dir=none];
testPropertyOptionRequired -> testMissingRequiredOption [label=" parser", dir=none];
testPropertyOptionRequired -> testMissingArgWithBursting [label=" parser", dir=none];
testPropertyOptionRequired -> testUnlimitedArgs [label=" parser", dir=none];
testMultipleWithLong -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testMultipleWithLong -> testPropertiesOption1 [label=" parser, options", dir=none];
testMultipleWithLong -> testPropertyOptionFlags [label=" parser", dir=none];
testMultipleWithLong -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testMultipleWithLong -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testMultipleWithLong -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testMultipleWithLong -> testMultiple [label=" parser, options", dir=none];
testMultipleWithLong -> testPropertiesOption2 [label=" parser, options", dir=none];
testMultipleWithLong -> testOptionGroupLong [label=" parser, options", dir=none];
testMultipleWithLong -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testMultipleWithLong -> testOptionGroup [label=" parser, options", dir=none];
testMultipleWithLong -> testUnambiguousPartialLongOption2 [label=" parser, options", dir=none];
testMultipleWithLong -> setUp [label=" options", dir=none];
testMultipleWithLong -> testSimpleLong [label=" parser, options", dir=none];
testMultipleWithLong -> testUnambiguousPartialLongOption1 [label=" parser, options", dir=none];
testMultipleWithLong -> testUnambiguousPartialLongOption4 [label=" parser, options", dir=none];
testMultipleWithLong -> testPropertyOptionGroup [label=" parser", dir=none];
testMultipleWithLong -> testMissingRequiredOptions [label=" parser, options", dir=none];
testMultipleWithLong -> testUnambiguousPartialLongOption3 [label=" parser, options", dir=none];
testMultipleWithLong -> testNegativeOption [label=" parser, options", dir=none];
testMultipleWithLong -> testStopBursting2 [label=" parser, options", dir=none];
testMultipleWithLong -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testMultipleWithLong -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testMultipleWithLong -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testMultipleWithLong -> testDoubleDash2 [label=" parser, options", dir=none];
testMultipleWithLong -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testMultipleWithLong -> testDoubleDash1 [label=" parser, options", dir=none];
testMultipleWithLong -> testMissingRequiredGroup [label=" parser, options", dir=none];
testMultipleWithLong -> testUnrecognizedOption [label=" parser, options", dir=none];
testMultipleWithLong -> testBursting [label=" parser, options", dir=none];
testMultipleWithLong -> testShortWithEqual [label=" parser, options", dir=none];
testMultipleWithLong -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testMultipleWithLong -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testMultipleWithLong -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testMultipleWithLong -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testMultipleWithLong -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testMultipleWithLong -> testSingleDash [label=" parser, options", dir=none];
testMultipleWithLong -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testMultipleWithLong -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testMultipleWithLong -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testMultipleWithLong -> testNegativeArgument [label=" parser, options", dir=none];
testMultipleWithLong -> testReuseOptionsTwice [label=" parser", dir=none];
testMultipleWithLong -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testMultipleWithLong -> testMissingRequiredOption [label=" parser, options", dir=none];
testMultipleWithLong -> testMissingArgWithBursting [label=" parser, options", dir=none];
testMultipleWithLong -> testUnlimitedArgs [label=" parser, options", dir=none];
testOptionGroup -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testOptionGroup -> testPropertiesOption1 [label=" parser, options", dir=none];
testOptionGroup -> testPropertyOptionFlags [label=" parser", dir=none];
testOptionGroup -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testOptionGroup -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testOptionGroup -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testOptionGroup -> testMultiple [label=" parser, options", dir=none];
testOptionGroup -> testPropertiesOption2 [label=" parser, options", dir=none];
testOptionGroup -> testOptionGroupLong [label=" parser, options", dir=none];
testOptionGroup -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testOptionGroup -> testUnambiguousPartialLongOption2 [label=" parser, options", dir=none];
testOptionGroup -> setUp [label=" options", dir=none];
testOptionGroup -> testSimpleLong [label=" parser, options", dir=none];
testOptionGroup -> testUnambiguousPartialLongOption1 [label=" parser, options", dir=none];
testOptionGroup -> testUnambiguousPartialLongOption4 [label=" parser, options", dir=none];
testOptionGroup -> testPropertyOptionGroup [label=" parser", dir=none];
testOptionGroup -> testMissingRequiredOptions [label=" parser, options", dir=none];
testOptionGroup -> testUnambiguousPartialLongOption3 [label=" parser, options", dir=none];
testOptionGroup -> testNegativeOption [label=" parser, options", dir=none];
testOptionGroup -> testStopBursting2 [label=" parser, options", dir=none];
testOptionGroup -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testOptionGroup -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testOptionGroup -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testOptionGroup -> testDoubleDash2 [label=" parser, options", dir=none];
testOptionGroup -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testOptionGroup -> testDoubleDash1 [label=" parser, options", dir=none];
testOptionGroup -> testMissingRequiredGroup [label=" parser, options", dir=none];
testOptionGroup -> testUnrecognizedOption [label=" parser, options", dir=none];
testOptionGroup -> testBursting [label=" parser, options", dir=none];
testOptionGroup -> testShortWithEqual [label=" parser, options", dir=none];
testOptionGroup -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testOptionGroup -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testOptionGroup -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testOptionGroup -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testOptionGroup -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testOptionGroup -> testSingleDash [label=" parser, options", dir=none];
testOptionGroup -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testOptionGroup -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testOptionGroup -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testOptionGroup -> testNegativeArgument [label=" parser, options", dir=none];
testOptionGroup -> testReuseOptionsTwice [label=" parser", dir=none];
testOptionGroup -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testOptionGroup -> testMissingRequiredOption [label=" parser, options", dir=none];
testOptionGroup -> testMissingArgWithBursting [label=" parser, options", dir=none];
testOptionGroup -> testUnlimitedArgs [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testPropertiesOption1 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testPropertyOptionFlags [label=" parser", dir=none];
testUnambiguousPartialLongOption2 -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testMultiple [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testPropertiesOption2 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testOptionGroupLong [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> setUp [label=" options", dir=none];
testUnambiguousPartialLongOption2 -> testSimpleLong [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testUnambiguousPartialLongOption1 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testUnambiguousPartialLongOption4 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testPropertyOptionGroup [label=" parser", dir=none];
testUnambiguousPartialLongOption2 -> testMissingRequiredOptions [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testUnambiguousPartialLongOption3 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testNegativeOption [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testStopBursting2 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testDoubleDash2 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testDoubleDash1 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testMissingRequiredGroup [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testUnrecognizedOption [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testBursting [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testShortWithEqual [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testSingleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testUnambiguousPartialLongOption2 -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testNegativeArgument [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testReuseOptionsTwice [label=" parser", dir=none];
testUnambiguousPartialLongOption2 -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testMissingRequiredOption [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testMissingArgWithBursting [label=" parser, options", dir=none];
testUnambiguousPartialLongOption2 -> testUnlimitedArgs [label=" parser, options", dir=none];
setUp -> testLongWithEqualSingleDash [label=" options", dir=none];
setUp -> testPropertiesOption1 [label=" options", dir=none];
setUp -> testStopAtNonOptionLong [label=" options", dir=none];
setUp -> testArgumentStartingWithHyphen [label=" options", dir=none];
setUp -> testUnrecognizedOptionWithBursting [label=" options", dir=none];
setUp -> testMultiple [label=" options", dir=none];
setUp -> testPropertiesOption2 [label=" options", dir=none];
setUp -> testOptionGroupLong [label=" options", dir=none];
setUp -> testAmbiguousLongWithoutEqualSingleDash [label=" options", dir=none];
setUp -> testSimpleLong [label=" options", dir=none];
setUp -> testUnambiguousPartialLongOption1 [label=" options", dir=none];
setUp -> testUnambiguousPartialLongOption4 [label=" options", dir=none];
setUp -> testMissingRequiredOptions [label=" options", dir=none];
setUp -> testUnambiguousPartialLongOption3 [label=" options", dir=none];
setUp -> testNegativeOption [label=" options", dir=none];
setUp -> testStopBursting2 [label=" options", dir=none];
setUp -> testLongWithoutEqualSingleDash [label=" options", dir=none];
setUp -> testShortOptionQuoteHandling [label=" options", dir=none];
setUp -> testLongOptionQuoteHandling [label=" options", dir=none];
setUp -> testDoubleDash2 [label=" options", dir=none];
setUp -> testLongWithoutEqualDoubleDash [label=" options", dir=none];
setUp -> testDoubleDash1 [label=" options", dir=none];
setUp -> testMissingRequiredGroup [label=" options", dir=none];
setUp -> testUnrecognizedOption [label=" options", dir=none];
setUp -> testBursting [label=" options", dir=none];
setUp -> testShortWithEqual [label=" options", dir=none];
setUp -> testOptionAndRequiredOption [label=" options", dir=none];
setUp -> testShortOptionConcatenatedQuoteHandling [label=" options", dir=none];
setUp -> testLongWithUnexpectedArgument2 [label=" options", dir=none];
setUp -> testShortWithUnexpectedArgument [label=" options", dir=none];
setUp -> testLongWithUnexpectedArgument1 [label=" options", dir=none];
setUp -> testSingleDash [label=" options", dir=none];
setUp -> testLongWithEqualDoubleDash [label=" options", dir=none];
setUp -> testStopAtUnexpectedArg [label=" options", dir=none];
setUp -> testNegativeArgument [label=" options", dir=none];
setUp -> testPartialLongOptionSingleDash [label=" options", dir=none];
setUp -> testMissingRequiredOption [label=" options", dir=none];
setUp -> testMissingArgWithBursting [label=" options", dir=none];
setUp -> testUnlimitedArgs [label=" options", dir=none];
testSimpleLong -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testSimpleLong -> testPropertiesOption1 [label=" parser, options", dir=none];
testSimpleLong -> testPropertyOptionFlags [label=" parser", dir=none];
testSimpleLong -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testSimpleLong -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testSimpleLong -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testSimpleLong -> testMultiple [label=" parser, options", dir=none];
testSimpleLong -> testPropertiesOption2 [label=" parser, options", dir=none];
testSimpleLong -> testOptionGroupLong [label=" parser, options", dir=none];
testSimpleLong -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testSimpleLong -> testUnambiguousPartialLongOption1 [label=" parser, options", dir=none];
testSimpleLong -> testUnambiguousPartialLongOption4 [label=" parser, options", dir=none];
testSimpleLong -> testPropertyOptionGroup [label=" parser", dir=none];
testSimpleLong -> testMissingRequiredOptions [label=" parser, options", dir=none];
testSimpleLong -> testUnambiguousPartialLongOption3 [label=" parser, options", dir=none];
testSimpleLong -> testNegativeOption [label=" parser, options", dir=none];
testSimpleLong -> testStopBursting2 [label=" parser, options", dir=none];
testSimpleLong -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testSimpleLong -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testSimpleLong -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testSimpleLong -> testDoubleDash2 [label=" parser, options", dir=none];
testSimpleLong -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testSimpleLong -> testDoubleDash1 [label=" parser, options", dir=none];
testSimpleLong -> testMissingRequiredGroup [label=" parser, options", dir=none];
testSimpleLong -> testUnrecognizedOption [label=" parser, options", dir=none];
testSimpleLong -> testBursting [label=" parser, options", dir=none];
testSimpleLong -> testShortWithEqual [label=" parser, options", dir=none];
testSimpleLong -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testSimpleLong -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testSimpleLong -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testSimpleLong -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testSimpleLong -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testSimpleLong -> testSingleDash [label=" parser, options", dir=none];
testSimpleLong -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testSimpleLong -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testSimpleLong -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testSimpleLong -> testNegativeArgument [label=" parser, options", dir=none];
testSimpleLong -> testReuseOptionsTwice [label=" parser", dir=none];
testSimpleLong -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testSimpleLong -> testMissingRequiredOption [label=" parser, options", dir=none];
testSimpleLong -> testMissingArgWithBursting [label=" parser, options", dir=none];
testSimpleLong -> testUnlimitedArgs [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testPropertiesOption1 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testPropertyOptionFlags [label=" parser", dir=none];
testUnambiguousPartialLongOption1 -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testMultiple [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testPropertiesOption2 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testOptionGroupLong [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testUnambiguousPartialLongOption4 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testPropertyOptionGroup [label=" parser", dir=none];
testUnambiguousPartialLongOption1 -> testMissingRequiredOptions [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testUnambiguousPartialLongOption3 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testNegativeOption [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testStopBursting2 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testDoubleDash2 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testDoubleDash1 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testMissingRequiredGroup [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testUnrecognizedOption [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testBursting [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testShortWithEqual [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testSingleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testUnambiguousPartialLongOption1 -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testNegativeArgument [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testReuseOptionsTwice [label=" parser", dir=none];
testUnambiguousPartialLongOption1 -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testMissingRequiredOption [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testMissingArgWithBursting [label=" parser, options", dir=none];
testUnambiguousPartialLongOption1 -> testUnlimitedArgs [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testPropertiesOption1 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testPropertyOptionFlags [label=" parser", dir=none];
testUnambiguousPartialLongOption4 -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testMultiple [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testPropertiesOption2 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testOptionGroupLong [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testPropertyOptionGroup [label=" parser", dir=none];
testUnambiguousPartialLongOption4 -> testMissingRequiredOptions [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testUnambiguousPartialLongOption3 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testNegativeOption [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testStopBursting2 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testDoubleDash2 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testDoubleDash1 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testMissingRequiredGroup [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testUnrecognizedOption [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testBursting [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testShortWithEqual [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testSingleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testUnambiguousPartialLongOption4 -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testNegativeArgument [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testReuseOptionsTwice [label=" parser", dir=none];
testUnambiguousPartialLongOption4 -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testMissingRequiredOption [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testMissingArgWithBursting [label=" parser, options", dir=none];
testUnambiguousPartialLongOption4 -> testUnlimitedArgs [label=" parser, options", dir=none];
testMissingRequiredOptions -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testMissingRequiredOptions -> testPropertiesOption1 [label=" parser, options", dir=none];
testMissingRequiredOptions -> testPropertyOptionFlags [label=" parser", dir=none];
testMissingRequiredOptions -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testMissingRequiredOptions -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testMissingRequiredOptions -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testMissingRequiredOptions -> testMultiple [label=" parser, options", dir=none];
testMissingRequiredOptions -> testPropertiesOption2 [label=" parser, options", dir=none];
testMissingRequiredOptions -> testOptionGroupLong [label=" parser, options", dir=none];
testMissingRequiredOptions -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testMissingRequiredOptions -> testPropertyOptionGroup [label=" parser", dir=none];
testMissingRequiredOptions -> testUnambiguousPartialLongOption3 [label=" parser, options", dir=none];
testMissingRequiredOptions -> testNegativeOption [label=" parser, options", dir=none];
testMissingRequiredOptions -> testStopBursting2 [label=" parser, options", dir=none];
testMissingRequiredOptions -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testMissingRequiredOptions -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testMissingRequiredOptions -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testMissingRequiredOptions -> testDoubleDash2 [label=" parser, options", dir=none];
testMissingRequiredOptions -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testMissingRequiredOptions -> testDoubleDash1 [label=" parser, options", dir=none];
testMissingRequiredOptions -> testMissingRequiredGroup [label=" parser, options", dir=none];
testMissingRequiredOptions -> testUnrecognizedOption [label=" parser, options", dir=none];
testMissingRequiredOptions -> testBursting [label=" parser, options", dir=none];
testMissingRequiredOptions -> testShortWithEqual [label=" parser, options", dir=none];
testMissingRequiredOptions -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testMissingRequiredOptions -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testMissingRequiredOptions -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testMissingRequiredOptions -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testMissingRequiredOptions -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testMissingRequiredOptions -> testSingleDash [label=" parser, options", dir=none];
testMissingRequiredOptions -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testMissingRequiredOptions -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testMissingRequiredOptions -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testMissingRequiredOptions -> testNegativeArgument [label=" parser, options", dir=none];
testMissingRequiredOptions -> testReuseOptionsTwice [label=" parser", dir=none];
testMissingRequiredOptions -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testMissingRequiredOptions -> testMissingRequiredOption [label=" parser, options", dir=none];
testMissingRequiredOptions -> testMissingArgWithBursting [label=" parser, options", dir=none];
testMissingRequiredOptions -> testUnlimitedArgs [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testPropertiesOption1 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testPropertyOptionFlags [label=" parser", dir=none];
testUnambiguousPartialLongOption3 -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testMultiple [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testPropertiesOption2 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testOptionGroupLong [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testPropertyOptionGroup [label=" parser", dir=none];
testUnambiguousPartialLongOption3 -> testNegativeOption [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testStopBursting2 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testDoubleDash2 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testDoubleDash1 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testMissingRequiredGroup [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testUnrecognizedOption [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testBursting [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testShortWithEqual [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testSingleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testUnambiguousPartialLongOption3 -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testNegativeArgument [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testReuseOptionsTwice [label=" parser", dir=none];
testUnambiguousPartialLongOption3 -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testMissingRequiredOption [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testMissingArgWithBursting [label=" parser, options", dir=none];
testUnambiguousPartialLongOption3 -> testUnlimitedArgs [label=" parser, options", dir=none];
testNegativeOption -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testNegativeOption -> testPropertiesOption1 [label=" parser, options", dir=none];
testNegativeOption -> testPropertyOptionFlags [label=" parser", dir=none];
testNegativeOption -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testNegativeOption -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testNegativeOption -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testNegativeOption -> testMultiple [label=" parser, options", dir=none];
testNegativeOption -> testPropertiesOption2 [label=" parser, options", dir=none];
testNegativeOption -> testOptionGroupLong [label=" parser, options", dir=none];
testNegativeOption -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testNegativeOption -> testPropertyOptionGroup [label=" parser", dir=none];
testNegativeOption -> testStopBursting2 [label=" parser, options", dir=none];
testNegativeOption -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testNegativeOption -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testNegativeOption -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testNegativeOption -> testDoubleDash2 [label=" parser, options", dir=none];
testNegativeOption -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testNegativeOption -> testDoubleDash1 [label=" parser, options", dir=none];
testNegativeOption -> testMissingRequiredGroup [label=" parser, options", dir=none];
testNegativeOption -> testUnrecognizedOption [label=" parser, options", dir=none];
testNegativeOption -> testBursting [label=" parser, options", dir=none];
testNegativeOption -> testShortWithEqual [label=" parser, options", dir=none];
testNegativeOption -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testNegativeOption -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testNegativeOption -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testNegativeOption -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testNegativeOption -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testNegativeOption -> testSingleDash [label=" parser, options", dir=none];
testNegativeOption -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testNegativeOption -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testNegativeOption -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testNegativeOption -> testNegativeArgument [label=" parser, options", dir=none];
testNegativeOption -> testReuseOptionsTwice [label=" parser", dir=none];
testNegativeOption -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testNegativeOption -> testMissingRequiredOption [label=" parser, options", dir=none];
testNegativeOption -> testMissingArgWithBursting [label=" parser, options", dir=none];
testNegativeOption -> testUnlimitedArgs [label=" parser, options", dir=none];
testStopBursting2 -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testStopBursting2 -> testPropertiesOption1 [label=" parser, options", dir=none];
testStopBursting2 -> testPropertyOptionFlags [label=" parser", dir=none];
testStopBursting2 -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testStopBursting2 -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testStopBursting2 -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testStopBursting2 -> testMultiple [label=" parser, options", dir=none];
testStopBursting2 -> testPropertiesOption2 [label=" parser, options", dir=none];
testStopBursting2 -> testOptionGroupLong [label=" parser, options", dir=none];
testStopBursting2 -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testStopBursting2 -> testPropertyOptionGroup [label=" parser", dir=none];
testStopBursting2 -> testLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testStopBursting2 -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testStopBursting2 -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testStopBursting2 -> testDoubleDash2 [label=" parser, options", dir=none];
testStopBursting2 -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testStopBursting2 -> testDoubleDash1 [label=" parser, options", dir=none];
testStopBursting2 -> testMissingRequiredGroup [label=" parser, options", dir=none];
testStopBursting2 -> testUnrecognizedOption [label=" parser, options", dir=none];
testStopBursting2 -> testBursting [label=" parser, options", dir=none];
testStopBursting2 -> testShortWithEqual [label=" parser, options", dir=none];
testStopBursting2 -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testStopBursting2 -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testStopBursting2 -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testStopBursting2 -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testStopBursting2 -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testStopBursting2 -> testSingleDash [label=" parser, options", dir=none];
testStopBursting2 -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testStopBursting2 -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testStopBursting2 -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testStopBursting2 -> testNegativeArgument [label=" parser, options", dir=none];
testStopBursting2 -> testReuseOptionsTwice [label=" parser", dir=none];
testStopBursting2 -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testStopBursting2 -> testMissingRequiredOption [label=" parser, options", dir=none];
testStopBursting2 -> testMissingArgWithBursting [label=" parser, options", dir=none];
testStopBursting2 -> testUnlimitedArgs [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testPropertiesOption1 [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testPropertyOptionFlags [label=" parser", dir=none];
testLongWithoutEqualSingleDash -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testMultiple [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testPropertiesOption2 [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testOptionGroupLong [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testPropertyOptionGroup [label=" parser", dir=none];
testLongWithoutEqualSingleDash -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testDoubleDash2 [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testDoubleDash1 [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testMissingRequiredGroup [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testUnrecognizedOption [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testBursting [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testShortWithEqual [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testSingleDash [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testLongWithoutEqualSingleDash -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testNegativeArgument [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testReuseOptionsTwice [label=" parser", dir=none];
testLongWithoutEqualSingleDash -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testMissingRequiredOption [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testMissingArgWithBursting [label=" parser, options", dir=none];
testLongWithoutEqualSingleDash -> testUnlimitedArgs [label=" parser, options", dir=none];
testDoubleDash2 -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testDoubleDash2 -> testPropertiesOption1 [label=" parser, options", dir=none];
testDoubleDash2 -> testPropertyOptionFlags [label=" parser", dir=none];
testDoubleDash2 -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testDoubleDash2 -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testDoubleDash2 -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testDoubleDash2 -> testMultiple [label=" parser, options", dir=none];
testDoubleDash2 -> testPropertiesOption2 [label=" parser, options", dir=none];
testDoubleDash2 -> testOptionGroupLong [label=" parser, options", dir=none];
testDoubleDash2 -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testDoubleDash2 -> testPropertyOptionGroup [label=" parser", dir=none];
testDoubleDash2 -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testDoubleDash2 -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testDoubleDash2 -> testLongWithoutEqualDoubleDash [label=" parser, options", dir=none];
testDoubleDash2 -> testDoubleDash1 [label=" parser, options", dir=none];
testDoubleDash2 -> testMissingRequiredGroup [label=" parser, options", dir=none];
testDoubleDash2 -> testUnrecognizedOption [label=" parser, options", dir=none];
testDoubleDash2 -> testBursting [label=" parser, options", dir=none];
testDoubleDash2 -> testShortWithEqual [label=" parser, options", dir=none];
testDoubleDash2 -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testDoubleDash2 -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testDoubleDash2 -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testDoubleDash2 -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testDoubleDash2 -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testDoubleDash2 -> testSingleDash [label=" parser, options", dir=none];
testDoubleDash2 -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testDoubleDash2 -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testDoubleDash2 -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testDoubleDash2 -> testNegativeArgument [label=" parser, options", dir=none];
testDoubleDash2 -> testReuseOptionsTwice [label=" parser", dir=none];
testDoubleDash2 -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testDoubleDash2 -> testMissingRequiredOption [label=" parser, options", dir=none];
testDoubleDash2 -> testMissingArgWithBursting [label=" parser, options", dir=none];
testDoubleDash2 -> testUnlimitedArgs [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testPropertiesOption1 [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testPropertyOptionFlags [label=" parser", dir=none];
testLongWithoutEqualDoubleDash -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testMultiple [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testPropertiesOption2 [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testOptionGroupLong [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testPropertyOptionGroup [label=" parser", dir=none];
testLongWithoutEqualDoubleDash -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testDoubleDash1 [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testMissingRequiredGroup [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testUnrecognizedOption [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testBursting [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testShortWithEqual [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testSingleDash [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testLongWithoutEqualDoubleDash -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testNegativeArgument [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testReuseOptionsTwice [label=" parser", dir=none];
testLongWithoutEqualDoubleDash -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testMissingRequiredOption [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testMissingArgWithBursting [label=" parser, options", dir=none];
testLongWithoutEqualDoubleDash -> testUnlimitedArgs [label=" parser, options", dir=none];
testDoubleDash1 -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testDoubleDash1 -> testPropertiesOption1 [label=" parser, options", dir=none];
testDoubleDash1 -> testPropertyOptionFlags [label=" parser", dir=none];
testDoubleDash1 -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testDoubleDash1 -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testDoubleDash1 -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testDoubleDash1 -> testMultiple [label=" parser, options", dir=none];
testDoubleDash1 -> testPropertiesOption2 [label=" parser, options", dir=none];
testDoubleDash1 -> testOptionGroupLong [label=" parser, options", dir=none];
testDoubleDash1 -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testDoubleDash1 -> testPropertyOptionGroup [label=" parser", dir=none];
testDoubleDash1 -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testDoubleDash1 -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testDoubleDash1 -> testMissingRequiredGroup [label=" parser, options", dir=none];
testDoubleDash1 -> testUnrecognizedOption [label=" parser, options", dir=none];
testDoubleDash1 -> testBursting [label=" parser, options", dir=none];
testDoubleDash1 -> testShortWithEqual [label=" parser, options", dir=none];
testDoubleDash1 -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testDoubleDash1 -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testDoubleDash1 -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testDoubleDash1 -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testDoubleDash1 -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testDoubleDash1 -> testSingleDash [label=" parser, options", dir=none];
testDoubleDash1 -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testDoubleDash1 -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testDoubleDash1 -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testDoubleDash1 -> testNegativeArgument [label=" parser, options", dir=none];
testDoubleDash1 -> testReuseOptionsTwice [label=" parser", dir=none];
testDoubleDash1 -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testDoubleDash1 -> testMissingRequiredOption [label=" parser, options", dir=none];
testDoubleDash1 -> testMissingArgWithBursting [label=" parser, options", dir=none];
testDoubleDash1 -> testUnlimitedArgs [label=" parser, options", dir=none];
testUnrecognizedOption -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testUnrecognizedOption -> testPropertiesOption1 [label=" parser, options", dir=none];
testUnrecognizedOption -> testPropertyOptionFlags [label=" parser", dir=none];
testUnrecognizedOption -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testUnrecognizedOption -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testUnrecognizedOption -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testUnrecognizedOption -> testMultiple [label=" parser, options", dir=none];
testUnrecognizedOption -> testPropertiesOption2 [label=" parser, options", dir=none];
testUnrecognizedOption -> testOptionGroupLong [label=" parser, options", dir=none];
testUnrecognizedOption -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testUnrecognizedOption -> testPropertyOptionGroup [label=" parser", dir=none];
testUnrecognizedOption -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testUnrecognizedOption -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testUnrecognizedOption -> testMissingRequiredGroup [label=" parser, options", dir=none];
testUnrecognizedOption -> testBursting [label=" parser, options", dir=none];
testUnrecognizedOption -> testShortWithEqual [label=" parser, options", dir=none];
testUnrecognizedOption -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testUnrecognizedOption -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testUnrecognizedOption -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testUnrecognizedOption -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testUnrecognizedOption -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testUnrecognizedOption -> testSingleDash [label=" parser, options", dir=none];
testUnrecognizedOption -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testUnrecognizedOption -> testPropertyOptionMultipleValues [label=" parser", dir=none];
testUnrecognizedOption -> testStopAtUnexpectedArg [label=" parser, options", dir=none];
testUnrecognizedOption -> testNegativeArgument [label=" parser, options", dir=none];
testUnrecognizedOption -> testReuseOptionsTwice [label=" parser", dir=none];
testUnrecognizedOption -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testUnrecognizedOption -> testMissingRequiredOption [label=" parser, options", dir=none];
testUnrecognizedOption -> testMissingArgWithBursting [label=" parser, options", dir=none];
testUnrecognizedOption -> testUnlimitedArgs [label=" parser, options", dir=none];
testPropertyOptionMultipleValues -> testLongWithEqualSingleDash [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testPropertiesOption1 [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testPropertyOptionFlags [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testStopAtNonOptionLong [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testArgumentStartingWithHyphen [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testUnrecognizedOptionWithBursting [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testMultiple [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testPropertiesOption2 [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testOptionGroupLong [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testAmbiguousLongWithoutEqualSingleDash [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testPropertyOptionGroup [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testShortOptionQuoteHandling [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testLongOptionQuoteHandling [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testMissingRequiredGroup [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testBursting [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testShortWithEqual [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testOptionAndRequiredOption [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testShortOptionConcatenatedQuoteHandling [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testLongWithUnexpectedArgument2 [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testShortWithUnexpectedArgument [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testLongWithUnexpectedArgument1 [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testSingleDash [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testLongWithEqualDoubleDash [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testStopAtUnexpectedArg [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testNegativeArgument [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testReuseOptionsTwice [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testPartialLongOptionSingleDash [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testMissingRequiredOption [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testMissingArgWithBursting [label=" parser", dir=none];
testPropertyOptionMultipleValues -> testUnlimitedArgs [label=" parser", dir=none];
testStopAtUnexpectedArg -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testPropertiesOption1 [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testPropertyOptionFlags [label=" parser", dir=none];
testStopAtUnexpectedArg -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testMultiple [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testPropertiesOption2 [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testOptionGroupLong [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testPropertyOptionGroup [label=" parser", dir=none];
testStopAtUnexpectedArg -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testMissingRequiredGroup [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testBursting [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testShortWithEqual [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testSingleDash [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testNegativeArgument [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testReuseOptionsTwice [label=" parser", dir=none];
testStopAtUnexpectedArg -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testMissingRequiredOption [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testMissingArgWithBursting [label=" parser, options", dir=none];
testStopAtUnexpectedArg -> testUnlimitedArgs [label=" parser, options", dir=none];
testMissingRequiredOption -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testMissingRequiredOption -> testPropertiesOption1 [label=" parser, options", dir=none];
testMissingRequiredOption -> testPropertyOptionFlags [label=" parser", dir=none];
testMissingRequiredOption -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testMissingRequiredOption -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testMissingRequiredOption -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testMissingRequiredOption -> testMultiple [label=" parser, options", dir=none];
testMissingRequiredOption -> testPropertiesOption2 [label=" parser, options", dir=none];
testMissingRequiredOption -> testOptionGroupLong [label=" parser, options", dir=none];
testMissingRequiredOption -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testMissingRequiredOption -> testPropertyOptionGroup [label=" parser", dir=none];
testMissingRequiredOption -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testMissingRequiredOption -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testMissingRequiredOption -> testMissingRequiredGroup [label=" parser, options", dir=none];
testMissingRequiredOption -> testBursting [label=" parser, options", dir=none];
testMissingRequiredOption -> testShortWithEqual [label=" parser, options", dir=none];
testMissingRequiredOption -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testMissingRequiredOption -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testMissingRequiredOption -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testMissingRequiredOption -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testMissingRequiredOption -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testMissingRequiredOption -> testSingleDash [label=" parser, options", dir=none];
testMissingRequiredOption -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testMissingRequiredOption -> testNegativeArgument [label=" parser, options", dir=none];
testMissingRequiredOption -> testReuseOptionsTwice [label=" parser", dir=none];
testMissingRequiredOption -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testMissingRequiredOption -> testMissingArgWithBursting [label=" parser, options", dir=none];
testMissingRequiredOption -> testUnlimitedArgs [label=" parser, options", dir=none];
testMissingArgWithBursting -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testMissingArgWithBursting -> testPropertiesOption1 [label=" parser, options", dir=none];
testMissingArgWithBursting -> testPropertyOptionFlags [label=" parser", dir=none];
testMissingArgWithBursting -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testMissingArgWithBursting -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testMissingArgWithBursting -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testMissingArgWithBursting -> testMultiple [label=" parser, options", dir=none];
testMissingArgWithBursting -> testPropertiesOption2 [label=" parser, options", dir=none];
testMissingArgWithBursting -> testOptionGroupLong [label=" parser, options", dir=none];
testMissingArgWithBursting -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testMissingArgWithBursting -> testPropertyOptionGroup [label=" parser", dir=none];
testMissingArgWithBursting -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testMissingArgWithBursting -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testMissingArgWithBursting -> testMissingRequiredGroup [label=" parser, options", dir=none];
testMissingArgWithBursting -> testBursting [label=" parser, options", dir=none];
testMissingArgWithBursting -> testShortWithEqual [label=" parser, options", dir=none];
testMissingArgWithBursting -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testMissingArgWithBursting -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testMissingArgWithBursting -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testMissingArgWithBursting -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testMissingArgWithBursting -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testMissingArgWithBursting -> testSingleDash [label=" parser, options", dir=none];
testMissingArgWithBursting -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testMissingArgWithBursting -> testNegativeArgument [label=" parser, options", dir=none];
testMissingArgWithBursting -> testReuseOptionsTwice [label=" parser", dir=none];
testMissingArgWithBursting -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testMissingArgWithBursting -> testUnlimitedArgs [label=" parser, options", dir=none];
testUnlimitedArgs -> testLongWithEqualSingleDash [label=" parser, options", dir=none];
testUnlimitedArgs -> testPropertiesOption1 [label=" parser, options", dir=none];
testUnlimitedArgs -> testPropertyOptionFlags [label=" parser", dir=none];
testUnlimitedArgs -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testUnlimitedArgs -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testUnlimitedArgs -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testUnlimitedArgs -> testMultiple [label=" parser, options", dir=none];
testUnlimitedArgs -> testPropertiesOption2 [label=" parser, options", dir=none];
testUnlimitedArgs -> testOptionGroupLong [label=" parser, options", dir=none];
testUnlimitedArgs -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testUnlimitedArgs -> testPropertyOptionGroup [label=" parser", dir=none];
testUnlimitedArgs -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testUnlimitedArgs -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testUnlimitedArgs -> testMissingRequiredGroup [label=" parser, options", dir=none];
testUnlimitedArgs -> testBursting [label=" parser, options", dir=none];
testUnlimitedArgs -> testShortWithEqual [label=" parser, options", dir=none];
testUnlimitedArgs -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testUnlimitedArgs -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testUnlimitedArgs -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testUnlimitedArgs -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testUnlimitedArgs -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testUnlimitedArgs -> testSingleDash [label=" parser, options", dir=none];
testUnlimitedArgs -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testUnlimitedArgs -> testNegativeArgument [label=" parser, options", dir=none];
testUnlimitedArgs -> testReuseOptionsTwice [label=" parser", dir=none];
testUnlimitedArgs -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testPropertiesOption1 [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testPropertyOptionFlags [label=" parser", dir=none];
testLongWithEqualSingleDash -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testMultiple [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testPropertiesOption2 [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testOptionGroupLong [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testPropertyOptionGroup [label=" parser", dir=none];
testLongWithEqualSingleDash -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testMissingRequiredGroup [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testBursting [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testShortWithEqual [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testSingleDash [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testNegativeArgument [label=" parser, options", dir=none];
testLongWithEqualSingleDash -> testReuseOptionsTwice [label=" parser", dir=none];
testLongWithEqualSingleDash -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testPropertiesOption1 -> testPropertyOptionFlags [label=" parser", dir=none];
testPropertiesOption1 -> testMissingRequiredGroup [label=" parser, options", dir=none];
testPropertiesOption1 -> testStopAtNonOptionLong [label=" parser, options", dir=none];
testPropertiesOption1 -> testBursting [label=" parser, options", dir=none];
testPropertiesOption1 -> testShortWithEqual [label=" parser, options", dir=none];
testPropertiesOption1 -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testPropertiesOption1 -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testPropertiesOption1 -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testPropertiesOption1 -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testPropertiesOption1 -> testMultiple [label=" parser, options", dir=none];
testPropertiesOption1 -> testPropertiesOption2 [label=" parser, options", dir=none];
testPropertiesOption1 -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testPropertiesOption1 -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testPropertiesOption1 -> testOptionGroupLong [label=" parser, options", dir=none];
testPropertiesOption1 -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testPropertiesOption1 -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testPropertiesOption1 -> testSingleDash [label=" parser, options", dir=none];
testPropertiesOption1 -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testPropertiesOption1 -> testNegativeArgument [label=" parser, options", dir=none];
testPropertiesOption1 -> testReuseOptionsTwice [label=" parser", dir=none];
testPropertiesOption1 -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testPropertiesOption1 -> testPropertyOptionGroup [label=" parser", dir=none];
testPropertiesOption1 -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testPropertiesOption1 -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testPropertyOptionFlags -> testMissingRequiredGroup [label=" parser", dir=none];
testPropertyOptionFlags -> testStopAtNonOptionLong [label=" parser", dir=none];
testPropertyOptionFlags -> testBursting [label=" parser", dir=none];
testPropertyOptionFlags -> testShortWithEqual [label=" parser", dir=none];
testPropertyOptionFlags -> testArgumentStartingWithHyphen [label=" parser", dir=none];
testPropertyOptionFlags -> testOptionAndRequiredOption [label=" parser", dir=none];
testPropertyOptionFlags -> testUnrecognizedOptionWithBursting [label=" parser", dir=none];
testPropertyOptionFlags -> testShortOptionConcatenatedQuoteHandling [label=" parser", dir=none];
testPropertyOptionFlags -> testMultiple [label=" parser", dir=none];
testPropertyOptionFlags -> testPropertiesOption2 [label=" parser", dir=none];
testPropertyOptionFlags -> testLongWithUnexpectedArgument2 [label=" parser", dir=none];
testPropertyOptionFlags -> testShortWithUnexpectedArgument [label=" parser", dir=none];
testPropertyOptionFlags -> testOptionGroupLong [label=" parser", dir=none];
testPropertyOptionFlags -> testLongWithUnexpectedArgument1 [label=" parser", dir=none];
testPropertyOptionFlags -> testAmbiguousLongWithoutEqualSingleDash [label=" parser", dir=none];
testPropertyOptionFlags -> testSingleDash [label=" parser", dir=none];
testPropertyOptionFlags -> testLongWithEqualDoubleDash [label=" parser", dir=none];
testPropertyOptionFlags -> testNegativeArgument [label=" parser", dir=none];
testPropertyOptionFlags -> testReuseOptionsTwice [label=" parser", dir=none];
testPropertyOptionFlags -> testPartialLongOptionSingleDash [label=" parser", dir=none];
testPropertyOptionFlags -> testPropertyOptionGroup [label=" parser", dir=none];
testPropertyOptionFlags -> testShortOptionQuoteHandling [label=" parser", dir=none];
testPropertyOptionFlags -> testLongOptionQuoteHandling [label=" parser", dir=none];
testStopAtNonOptionLong -> testMissingRequiredGroup [label=" parser, options", dir=none];
testStopAtNonOptionLong -> testBursting [label=" parser, options", dir=none];
testStopAtNonOptionLong -> testShortWithEqual [label=" parser, options", dir=none];
testStopAtNonOptionLong -> testArgumentStartingWithHyphen [label=" parser, options", dir=none];
testStopAtNonOptionLong -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testStopAtNonOptionLong -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testStopAtNonOptionLong -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testStopAtNonOptionLong -> testMultiple [label=" parser, options", dir=none];
testStopAtNonOptionLong -> testPropertiesOption2 [label=" parser, options", dir=none];
testStopAtNonOptionLong -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testStopAtNonOptionLong -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testStopAtNonOptionLong -> testOptionGroupLong [label=" parser, options", dir=none];
testStopAtNonOptionLong -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testStopAtNonOptionLong -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testStopAtNonOptionLong -> testSingleDash [label=" parser, options", dir=none];
testStopAtNonOptionLong -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testStopAtNonOptionLong -> testNegativeArgument [label=" parser, options", dir=none];
testStopAtNonOptionLong -> testReuseOptionsTwice [label=" parser", dir=none];
testStopAtNonOptionLong -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testStopAtNonOptionLong -> testPropertyOptionGroup [label=" parser", dir=none];
testStopAtNonOptionLong -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testStopAtNonOptionLong -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testArgumentStartingWithHyphen -> testMissingRequiredGroup [label=" parser, options", dir=none];
testArgumentStartingWithHyphen -> testBursting [label=" parser, options", dir=none];
testArgumentStartingWithHyphen -> testShortWithEqual [label=" parser, options", dir=none];
testArgumentStartingWithHyphen -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testArgumentStartingWithHyphen -> testUnrecognizedOptionWithBursting [label=" parser, options", dir=none];
testArgumentStartingWithHyphen -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testArgumentStartingWithHyphen -> testMultiple [label=" parser, options", dir=none];
testArgumentStartingWithHyphen -> testPropertiesOption2 [label=" parser, options", dir=none];
testArgumentStartingWithHyphen -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testArgumentStartingWithHyphen -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testArgumentStartingWithHyphen -> testOptionGroupLong [label=" parser, options", dir=none];
testArgumentStartingWithHyphen -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testArgumentStartingWithHyphen -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testArgumentStartingWithHyphen -> testSingleDash [label=" parser, options", dir=none];
testArgumentStartingWithHyphen -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testArgumentStartingWithHyphen -> testNegativeArgument [label=" parser, options", dir=none];
testArgumentStartingWithHyphen -> testReuseOptionsTwice [label=" parser", dir=none];
testArgumentStartingWithHyphen -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testArgumentStartingWithHyphen -> testPropertyOptionGroup [label=" parser", dir=none];
testArgumentStartingWithHyphen -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testArgumentStartingWithHyphen -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testUnrecognizedOptionWithBursting -> testMissingRequiredGroup [label=" parser, options", dir=none];
testUnrecognizedOptionWithBursting -> testBursting [label=" parser, options", dir=none];
testUnrecognizedOptionWithBursting -> testShortWithEqual [label=" parser, options", dir=none];
testUnrecognizedOptionWithBursting -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testUnrecognizedOptionWithBursting -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testUnrecognizedOptionWithBursting -> testMultiple [label=" parser, options", dir=none];
testUnrecognizedOptionWithBursting -> testPropertiesOption2 [label=" parser, options", dir=none];
testUnrecognizedOptionWithBursting -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testUnrecognizedOptionWithBursting -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testUnrecognizedOptionWithBursting -> testOptionGroupLong [label=" parser, options", dir=none];
testUnrecognizedOptionWithBursting -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testUnrecognizedOptionWithBursting -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testUnrecognizedOptionWithBursting -> testSingleDash [label=" parser, options", dir=none];
testUnrecognizedOptionWithBursting -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testUnrecognizedOptionWithBursting -> testNegativeArgument [label=" parser, options", dir=none];
testUnrecognizedOptionWithBursting -> testReuseOptionsTwice [label=" parser", dir=none];
testUnrecognizedOptionWithBursting -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testUnrecognizedOptionWithBursting -> testPropertyOptionGroup [label=" parser", dir=none];
testUnrecognizedOptionWithBursting -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testUnrecognizedOptionWithBursting -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testMultiple -> testMissingRequiredGroup [label=" parser, options", dir=none];
testMultiple -> testBursting [label=" parser, options", dir=none];
testMultiple -> testShortWithEqual [label=" parser, options", dir=none];
testMultiple -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testMultiple -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testMultiple -> testPropertiesOption2 [label=" parser, options", dir=none];
testMultiple -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testMultiple -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testMultiple -> testOptionGroupLong [label=" parser, options", dir=none];
testMultiple -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testMultiple -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testMultiple -> testSingleDash [label=" parser, options", dir=none];
testMultiple -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testMultiple -> testNegativeArgument [label=" parser, options", dir=none];
testMultiple -> testReuseOptionsTwice [label=" parser", dir=none];
testMultiple -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testMultiple -> testPropertyOptionGroup [label=" parser", dir=none];
testMultiple -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testMultiple -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testPropertiesOption2 -> testMissingRequiredGroup [label=" parser, options", dir=none];
testPropertiesOption2 -> testBursting [label=" parser, options", dir=none];
testPropertiesOption2 -> testShortWithEqual [label=" parser, options", dir=none];
testPropertiesOption2 -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testPropertiesOption2 -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testPropertiesOption2 -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testPropertiesOption2 -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testPropertiesOption2 -> testOptionGroupLong [label=" parser, options", dir=none];
testPropertiesOption2 -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testPropertiesOption2 -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testPropertiesOption2 -> testSingleDash [label=" parser, options", dir=none];
testPropertiesOption2 -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testPropertiesOption2 -> testNegativeArgument [label=" parser, options", dir=none];
testPropertiesOption2 -> testReuseOptionsTwice [label=" parser", dir=none];
testPropertiesOption2 -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testPropertiesOption2 -> testPropertyOptionGroup [label=" parser", dir=none];
testPropertiesOption2 -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testPropertiesOption2 -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testOptionGroupLong -> testMissingRequiredGroup [label=" parser, options", dir=none];
testOptionGroupLong -> testBursting [label=" parser, options", dir=none];
testOptionGroupLong -> testShortWithEqual [label=" parser, options", dir=none];
testOptionGroupLong -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testOptionGroupLong -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testOptionGroupLong -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testOptionGroupLong -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testOptionGroupLong -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testOptionGroupLong -> testAmbiguousLongWithoutEqualSingleDash [label=" parser, options", dir=none];
testOptionGroupLong -> testSingleDash [label=" parser, options", dir=none];
testOptionGroupLong -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testOptionGroupLong -> testNegativeArgument [label=" parser, options", dir=none];
testOptionGroupLong -> testReuseOptionsTwice [label=" parser", dir=none];
testOptionGroupLong -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testOptionGroupLong -> testPropertyOptionGroup [label=" parser", dir=none];
testOptionGroupLong -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testOptionGroupLong -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testAmbiguousLongWithoutEqualSingleDash -> testMissingRequiredGroup [label=" parser, options", dir=none];
testAmbiguousLongWithoutEqualSingleDash -> testBursting [label=" parser, options", dir=none];
testAmbiguousLongWithoutEqualSingleDash -> testShortWithEqual [label=" parser, options", dir=none];
testAmbiguousLongWithoutEqualSingleDash -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testAmbiguousLongWithoutEqualSingleDash -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testAmbiguousLongWithoutEqualSingleDash -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testAmbiguousLongWithoutEqualSingleDash -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testAmbiguousLongWithoutEqualSingleDash -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testAmbiguousLongWithoutEqualSingleDash -> testSingleDash [label=" parser, options", dir=none];
testAmbiguousLongWithoutEqualSingleDash -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testAmbiguousLongWithoutEqualSingleDash -> testNegativeArgument [label=" parser, options", dir=none];
testAmbiguousLongWithoutEqualSingleDash -> testReuseOptionsTwice [label=" parser", dir=none];
testAmbiguousLongWithoutEqualSingleDash -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testAmbiguousLongWithoutEqualSingleDash -> testPropertyOptionGroup [label=" parser", dir=none];
testAmbiguousLongWithoutEqualSingleDash -> testShortOptionQuoteHandling [label=" parser, options", dir=none];
testAmbiguousLongWithoutEqualSingleDash -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testPropertyOptionGroup -> testMissingRequiredGroup [label=" parser", dir=none];
testPropertyOptionGroup -> testBursting [label=" parser", dir=none];
testPropertyOptionGroup -> testShortWithEqual [label=" parser", dir=none];
testPropertyOptionGroup -> testOptionAndRequiredOption [label=" parser", dir=none];
testPropertyOptionGroup -> testShortOptionConcatenatedQuoteHandling [label=" parser", dir=none];
testPropertyOptionGroup -> testLongWithUnexpectedArgument2 [label=" parser", dir=none];
testPropertyOptionGroup -> testShortWithUnexpectedArgument [label=" parser", dir=none];
testPropertyOptionGroup -> testLongWithUnexpectedArgument1 [label=" parser", dir=none];
testPropertyOptionGroup -> testSingleDash [label=" parser", dir=none];
testPropertyOptionGroup -> testLongWithEqualDoubleDash [label=" parser", dir=none];
testPropertyOptionGroup -> testNegativeArgument [label=" parser", dir=none];
testPropertyOptionGroup -> testReuseOptionsTwice [label=" parser", dir=none];
testPropertyOptionGroup -> testPartialLongOptionSingleDash [label=" parser", dir=none];
testPropertyOptionGroup -> testShortOptionQuoteHandling [label=" parser", dir=none];
testPropertyOptionGroup -> testLongOptionQuoteHandling [label=" parser", dir=none];
testShortOptionQuoteHandling -> testMissingRequiredGroup [label=" parser, options", dir=none];
testShortOptionQuoteHandling -> testBursting [label=" parser, options", dir=none];
testShortOptionQuoteHandling -> testShortWithEqual [label=" parser, options", dir=none];
testShortOptionQuoteHandling -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testShortOptionQuoteHandling -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testShortOptionQuoteHandling -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testShortOptionQuoteHandling -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testShortOptionQuoteHandling -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testShortOptionQuoteHandling -> testSingleDash [label=" parser, options", dir=none];
testShortOptionQuoteHandling -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testShortOptionQuoteHandling -> testNegativeArgument [label=" parser, options", dir=none];
testShortOptionQuoteHandling -> testReuseOptionsTwice [label=" parser", dir=none];
testShortOptionQuoteHandling -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testShortOptionQuoteHandling -> testLongOptionQuoteHandling [label=" parser, options", dir=none];
testLongOptionQuoteHandling -> testMissingRequiredGroup [label=" parser, options", dir=none];
testLongOptionQuoteHandling -> testBursting [label=" parser, options", dir=none];
testLongOptionQuoteHandling -> testShortWithEqual [label=" parser, options", dir=none];
testLongOptionQuoteHandling -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testLongOptionQuoteHandling -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testLongOptionQuoteHandling -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testLongOptionQuoteHandling -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testLongOptionQuoteHandling -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testLongOptionQuoteHandling -> testSingleDash [label=" parser, options", dir=none];
testLongOptionQuoteHandling -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testLongOptionQuoteHandling -> testNegativeArgument [label=" parser, options", dir=none];
testLongOptionQuoteHandling -> testReuseOptionsTwice [label=" parser", dir=none];
testLongOptionQuoteHandling -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testMissingRequiredGroup -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testMissingRequiredGroup -> testSingleDash [label=" parser, options", dir=none];
testMissingRequiredGroup -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testMissingRequiredGroup -> testNegativeArgument [label=" parser, options", dir=none];
testMissingRequiredGroup -> testBursting [label=" parser, options", dir=none];
testMissingRequiredGroup -> testShortWithEqual [label=" parser, options", dir=none];
testMissingRequiredGroup -> testReuseOptionsTwice [label=" parser", dir=none];
testMissingRequiredGroup -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testMissingRequiredGroup -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testMissingRequiredGroup -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testMissingRequiredGroup -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testMissingRequiredGroup -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testBursting -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testBursting -> testSingleDash [label=" parser, options", dir=none];
testBursting -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testBursting -> testNegativeArgument [label=" parser, options", dir=none];
testBursting -> testShortWithEqual [label=" parser, options", dir=none];
testBursting -> testReuseOptionsTwice [label=" parser", dir=none];
testBursting -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testBursting -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testBursting -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testBursting -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testBursting -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testShortWithEqual -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testShortWithEqual -> testSingleDash [label=" parser, options", dir=none];
testShortWithEqual -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testShortWithEqual -> testNegativeArgument [label=" parser, options", dir=none];
testShortWithEqual -> testReuseOptionsTwice [label=" parser", dir=none];
testShortWithEqual -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testShortWithEqual -> testOptionAndRequiredOption [label=" parser, options", dir=none];
testShortWithEqual -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testShortWithEqual -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testShortWithEqual -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testOptionAndRequiredOption -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testOptionAndRequiredOption -> testSingleDash [label=" parser, options", dir=none];
testOptionAndRequiredOption -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testOptionAndRequiredOption -> testNegativeArgument [label=" parser, options", dir=none];
testOptionAndRequiredOption -> testReuseOptionsTwice [label=" parser", dir=none];
testOptionAndRequiredOption -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testOptionAndRequiredOption -> testShortOptionConcatenatedQuoteHandling [label=" parser, options", dir=none];
testOptionAndRequiredOption -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testOptionAndRequiredOption -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testShortOptionConcatenatedQuoteHandling -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testShortOptionConcatenatedQuoteHandling -> testSingleDash [label=" parser, options", dir=none];
testShortOptionConcatenatedQuoteHandling -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testShortOptionConcatenatedQuoteHandling -> testNegativeArgument [label=" parser, options", dir=none];
testShortOptionConcatenatedQuoteHandling -> testReuseOptionsTwice [label=" parser", dir=none];
testShortOptionConcatenatedQuoteHandling -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testShortOptionConcatenatedQuoteHandling -> testLongWithUnexpectedArgument2 [label=" parser, options", dir=none];
testShortOptionConcatenatedQuoteHandling -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testLongWithUnexpectedArgument2 -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testLongWithUnexpectedArgument2 -> testSingleDash [label=" parser, options", dir=none];
testLongWithUnexpectedArgument2 -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testLongWithUnexpectedArgument2 -> testNegativeArgument [label=" parser, options", dir=none];
testLongWithUnexpectedArgument2 -> testReuseOptionsTwice [label=" parser", dir=none];
testLongWithUnexpectedArgument2 -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testLongWithUnexpectedArgument2 -> testShortWithUnexpectedArgument [label=" parser, options", dir=none];
testShortWithUnexpectedArgument -> testLongWithUnexpectedArgument1 [label=" parser, options", dir=none];
testShortWithUnexpectedArgument -> testSingleDash [label=" parser, options", dir=none];
testShortWithUnexpectedArgument -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testShortWithUnexpectedArgument -> testNegativeArgument [label=" parser, options", dir=none];
testShortWithUnexpectedArgument -> testReuseOptionsTwice [label=" parser", dir=none];
testShortWithUnexpectedArgument -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testLongWithUnexpectedArgument1 -> testSingleDash [label=" parser, options", dir=none];
testLongWithUnexpectedArgument1 -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testLongWithUnexpectedArgument1 -> testNegativeArgument [label=" parser, options", dir=none];
testLongWithUnexpectedArgument1 -> testReuseOptionsTwice [label=" parser", dir=none];
testLongWithUnexpectedArgument1 -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testSingleDash -> testLongWithEqualDoubleDash [label=" parser, options", dir=none];
testSingleDash -> testNegativeArgument [label=" parser, options", dir=none];
testSingleDash -> testReuseOptionsTwice [label=" parser", dir=none];
testSingleDash -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testLongWithEqualDoubleDash -> testNegativeArgument [label=" parser, options", dir=none];
testLongWithEqualDoubleDash -> testReuseOptionsTwice [label=" parser", dir=none];
testLongWithEqualDoubleDash -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testNegativeArgument -> testReuseOptionsTwice [label=" parser", dir=none];
testNegativeArgument -> testPartialLongOptionSingleDash [label=" parser, options", dir=none];
testReuseOptionsTwice -> testPartialLongOptionSingleDash [label=" parser", dir=none];
}