digraph G {
entrySet;
containsKey;
values;
clear;
isEmpty;
removeComposited;
containsValue;
put;
remove;
addComposited;
size;
hashCode;
get;
putAll;
equals;
setMutator;
keySet;
addComposited -> hashCode [label=" composite", dir=none];
addComposited -> equals [label=" composite", dir=none];
addComposited -> keySet [label=" composite", dir=none];
entrySet -> addComposited [label=" composite", dir=none];
entrySet -> hashCode [label=" composite", dir=none];
entrySet -> values [label=" composite", dir=none];
entrySet -> equals [label=" composite", dir=none];
entrySet -> keySet [label=" composite", dir=none];
entrySet -> removeComposited [label=" composite", dir=none];
hashCode -> equals [label=" composite", dir=none];
hashCode -> keySet [label=" composite", dir=none];
values -> addComposited [label=" composite", dir=none];
values -> hashCode [label=" composite", dir=none];
values -> equals [label=" composite", dir=none];
values -> keySet [label=" composite", dir=none];
values -> removeComposited [label=" composite", dir=none];
equals -> keySet [label=" composite", dir=none];
removeComposited -> addComposited [label=" composite", dir=none];
removeComposited -> hashCode [label=" composite", dir=none];
removeComposited -> equals [label=" composite", dir=none];
removeComposited -> keySet [label=" composite", dir=none];
}