digraph G {
add;
entrySet;
clear;
remove;
contains;
iterator;
removeAll;
size;
hashCode;
equals;
uniqueSet;
toString;
getCount;
setCount;
contains -> removeAll [label=" entrySet", dir=none];
contains -> size [label=" entrySet", dir=none];
contains -> hashCode [label=" entrySet", dir=none];
contains -> equals [label=" entrySet", dir=none];
contains -> toString [label=" entrySet", dir=none];
contains -> getCount [label=" entrySet", dir=none];
contains -> setCount [label=" entrySet", dir=none];
removeAll -> size [label=" entrySet", dir=none];
removeAll -> hashCode [label=" entrySet", dir=none];
removeAll -> equals [label=" entrySet", dir=none];
removeAll -> toString [label=" entrySet", dir=none];
removeAll -> getCount [label=" entrySet", dir=none];
removeAll -> setCount [label=" entrySet", dir=none];
size -> hashCode [label=" entrySet", dir=none];
size -> equals [label=" entrySet", dir=none];
size -> toString [label=" entrySet", dir=none];
size -> getCount [label=" entrySet", dir=none];
size -> setCount [label=" entrySet", dir=none];
entrySet -> contains [label=" entrySet", dir=none];
entrySet -> removeAll [label=" entrySet", dir=none];
entrySet -> size [label=" entrySet", dir=none];
entrySet -> hashCode [label=" entrySet", dir=none];
entrySet -> equals [label=" entrySet", dir=none];
entrySet -> clear [label=" entrySet", dir=none];
entrySet -> toString [label=" entrySet", dir=none];
entrySet -> getCount [label=" entrySet", dir=none];
entrySet -> setCount [label=" entrySet", dir=none];
hashCode -> equals [label=" entrySet", dir=none];
hashCode -> toString [label=" entrySet", dir=none];
hashCode -> getCount [label=" entrySet", dir=none];
hashCode -> setCount [label=" entrySet", dir=none];
equals -> toString [label=" entrySet", dir=none];
equals -> getCount [label=" entrySet", dir=none];
equals -> setCount [label=" entrySet", dir=none];
clear -> contains [label=" entrySet", dir=none];
clear -> removeAll [label=" entrySet", dir=none];
clear -> size [label=" entrySet", dir=none];
clear -> hashCode [label=" entrySet", dir=none];
clear -> equals [label=" entrySet", dir=none];
clear -> toString [label=" entrySet", dir=none];
clear -> getCount [label=" entrySet", dir=none];
clear -> setCount [label=" entrySet", dir=none];
toString -> getCount [label=" entrySet", dir=none];
toString -> setCount [label=" entrySet", dir=none];
getCount -> setCount [label=" entrySet", dir=none];
}