digraph G {
next;
add;
set;
previous;
hasPrevious;
reset;
hasNext;
nextIndex;
previousIndex;
remove;
next -> set [label=" removed, nextCalled", dir=none];
next -> previous [label=" removed, beforeFirst, object", dir=none];
next -> hasPrevious [label=" removed, beforeFirst", dir=none];
next -> reset [label=" beforeFirst, nextCalled", dir=none];
next -> hasNext [label=" removed, beforeFirst", dir=none];
next -> nextIndex [label=" beforeFirst", dir=none];
next -> previousIndex [label=" beforeFirst", dir=none];
next -> remove [label=" removed, nextCalled, object", dir=none];
set -> previous [label=" removed", dir=none];
set -> hasPrevious [label=" removed", dir=none];
set -> reset [label=" nextCalled", dir=none];
set -> hasNext [label=" removed", dir=none];
set -> remove [label=" removed, nextCalled", dir=none];
previous -> hasPrevious [label=" removed, beforeFirst", dir=none];
previous -> reset [label=" beforeFirst", dir=none];
previous -> hasNext [label=" removed, beforeFirst", dir=none];
previous -> nextIndex [label=" beforeFirst", dir=none];
previous -> previousIndex [label=" beforeFirst", dir=none];
previous -> remove [label=" removed, object", dir=none];
hasPrevious -> reset [label=" beforeFirst", dir=none];
hasPrevious -> hasNext [label=" removed, beforeFirst", dir=none];
hasPrevious -> nextIndex [label=" beforeFirst", dir=none];
hasPrevious -> previousIndex [label=" beforeFirst", dir=none];
hasPrevious -> remove [label=" removed", dir=none];
reset -> hasNext [label=" beforeFirst", dir=none];
reset -> nextIndex [label=" beforeFirst", dir=none];
reset -> previousIndex [label=" beforeFirst", dir=none];
reset -> remove [label=" nextCalled", dir=none];
hasNext -> nextIndex [label=" beforeFirst", dir=none];
hasNext -> previousIndex [label=" beforeFirst", dir=none];
hasNext -> remove [label=" removed", dir=none];
nextIndex -> previousIndex [label=" beforeFirst", dir=none];
}