digraph G {
getOtherKeys;
testMultiKeyGet;
makeObject;
testLRUMultiKeyMap;
getCompatibilityVersion;
testMultiKeyPut;
testMultiKeyContainsKey;
getMap;
getSampleKeys;
getNewSampleValues;
testMultiKeyRemoveAll4;
testMultiKeyRemoveAll3;
testClone;
testMultiKeyRemoveAll2;
suite;
testMultiKeyRemoveAll1;
isAllowNullKey;
testMultiKeyPutWithNullKey;
testNullHandling;
testMultiKeyRemove;
getSampleValues;
testMultiKeyRemoveAll4 -> testMultiKeyRemoveAll3 [label=" I1, I2", dir=none];
testMultiKeyRemoveAll4 -> testClone [label=" I1, I2", dir=none];
testMultiKeyRemoveAll4 -> testMultiKeyRemoveAll2 [label=" I2, I3", dir=none];
testMultiKeyRemoveAll4 -> testMultiKeyRemoveAll1 [label=" I1", dir=none];
testMultiKeyRemoveAll3 -> testClone [label=" I1, I2", dir=none];
testMultiKeyRemoveAll3 -> testMultiKeyRemoveAll2 [label=" I2", dir=none];
testMultiKeyRemoveAll3 -> testMultiKeyRemoveAll1 [label=" I1", dir=none];
testClone -> testMultiKeyRemoveAll2 [label=" I2", dir=none];
testClone -> testMultiKeyRemoveAll1 [label=" I1", dir=none];
getOtherKeys -> testMultiKeyRemoveAll4 [label=" I1, I2", dir=none];
getOtherKeys -> testMultiKeyRemoveAll3 [label=" I1, I2", dir=none];
getOtherKeys -> testClone [label=" I1, I2", dir=none];
getOtherKeys -> testMultiKeyRemoveAll2 [label=" I2", dir=none];
getOtherKeys -> testMultiKeyRemoveAll1 [label=" I1", dir=none];
getOtherKeys -> testLRUMultiKeyMap [label=" I1, I2, I4, I5", dir=none];
testLRUMultiKeyMap -> testMultiKeyRemoveAll4 [label=" I1, I2, I3", dir=none];
testLRUMultiKeyMap -> testMultiKeyRemoveAll3 [label=" I1, I2", dir=none];
testLRUMultiKeyMap -> testClone [label=" I1, I2", dir=none];
testLRUMultiKeyMap -> testMultiKeyRemoveAll2 [label=" I2, I3", dir=none];
testLRUMultiKeyMap -> testMultiKeyRemoveAll1 [label=" I1", dir=none];
}