digraph G {
testTwoArgCtor;
testGetKeysArrayConstructorCloned;
testHashCode;
testGetKeysSimpleConstructor;
testGetKeysArrayConstructorNonCloned;
testEqualsAfterSerialization;
testConstructors;
testConstructorsByArray;
testSize;
testEqualsAfterSerializationOfDerivedClass;
testConstructorsByArrayNull;
testEquals;
testGetIndexed;
testGetKeysArrayConstructorNonCloned -> testEqualsAfterSerialization [label=" ONE, TWO", dir=none];
testGetKeysArrayConstructorNonCloned -> testConstructors [label=" ONE, TWO", dir=none];
testGetKeysArrayConstructorNonCloned -> testConstructorsByArray [label=" ONE, TWO", dir=none];
testGetKeysArrayConstructorNonCloned -> testSize [label=" ONE, TWO", dir=none];
testGetKeysArrayConstructorNonCloned -> testEquals [label=" ONE, TWO", dir=none];
testGetKeysArrayConstructorNonCloned -> testGetIndexed [label=" ONE, TWO", dir=none];
testGetKeysArrayConstructorCloned -> testGetKeysArrayConstructorNonCloned [label=" ONE, TWO", dir=none];
testGetKeysArrayConstructorCloned -> testEqualsAfterSerialization [label=" ONE, TWO", dir=none];
testGetKeysArrayConstructorCloned -> testConstructors [label=" ONE, TWO", dir=none];
testGetKeysArrayConstructorCloned -> testConstructorsByArray [label=" ONE, TWO", dir=none];
testGetKeysArrayConstructorCloned -> testSize [label=" ONE, TWO", dir=none];
testGetKeysArrayConstructorCloned -> testHashCode [label=" ONE, TWO", dir=none];
testGetKeysArrayConstructorCloned -> testGetKeysSimpleConstructor [label=" ONE, TWO", dir=none];
testGetKeysArrayConstructorCloned -> testEquals [label=" ONE, TWO", dir=none];
testGetKeysArrayConstructorCloned -> testGetIndexed [label=" ONE, TWO", dir=none];
testEqualsAfterSerialization -> testConstructors [label=" ONE, TWO", dir=none];
testEqualsAfterSerialization -> testConstructorsByArray [label=" ONE, TWO", dir=none];
testEqualsAfterSerialization -> testSize [label=" ONE, TWO", dir=none];
testEqualsAfterSerialization -> testEquals [label=" ONE, TWO", dir=none];
testEqualsAfterSerialization -> testGetIndexed [label=" ONE, TWO", dir=none];
testConstructors -> testConstructorsByArray [label=" FIVE, ONE, FOUR, TWO, THREE", dir=none];
testConstructors -> testSize [label=" FIVE, ONE, FOUR, TWO, THREE", dir=none];
testConstructors -> testEquals [label=" ONE, TWO", dir=none];
testConstructors -> testGetIndexed [label=" ONE, TWO", dir=none];
testConstructorsByArray -> testSize [label=" FIVE, FOUR, ONE, TWO, THREE", dir=none];
testConstructorsByArray -> testEquals [label=" ONE, TWO", dir=none];
testConstructorsByArray -> testGetIndexed [label=" ONE, TWO", dir=none];
testSize -> testEquals [label=" ONE, TWO", dir=none];
testSize -> testGetIndexed [label=" ONE, TWO", dir=none];
testHashCode -> testGetKeysArrayConstructorNonCloned [label=" ONE, TWO", dir=none];
testHashCode -> testEqualsAfterSerialization [label=" ONE, TWO", dir=none];
testHashCode -> testConstructors [label=" ONE, TWO", dir=none];
testHashCode -> testConstructorsByArray [label=" ONE, TWO", dir=none];
testHashCode -> testSize [label=" ONE, TWO", dir=none];
testHashCode -> testGetKeysSimpleConstructor [label=" ONE, TWO", dir=none];
testHashCode -> testEquals [label=" ONE, TWO", dir=none];
testHashCode -> testGetIndexed [label=" ONE, TWO", dir=none];
testGetKeysSimpleConstructor -> testGetKeysArrayConstructorNonCloned [label=" ONE, TWO", dir=none];
testGetKeysSimpleConstructor -> testEqualsAfterSerialization [label=" ONE, TWO", dir=none];
testGetKeysSimpleConstructor -> testConstructors [label=" ONE, TWO", dir=none];
testGetKeysSimpleConstructor -> testConstructorsByArray [label=" ONE, TWO", dir=none];
testGetKeysSimpleConstructor -> testSize [label=" ONE, TWO", dir=none];
testGetKeysSimpleConstructor -> testEquals [label=" ONE, TWO", dir=none];
testGetKeysSimpleConstructor -> testGetIndexed [label=" ONE, TWO", dir=none];
testEquals -> testGetIndexed [label=" ONE, TWO", dir=none];
}