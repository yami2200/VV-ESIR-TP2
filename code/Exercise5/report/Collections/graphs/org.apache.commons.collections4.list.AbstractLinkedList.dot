digraph G {
getLast;
removeLast;
remove;
addLast;
iterator;
removeAll;
getFirst;
hashCode;
get;
removeFirst;
toArray;
indexOf;
add;
subList;
set;
containsAll;
isEmpty;
clear;
lastIndexOf;
contains;
size;
addAll;
equals;
listIterator;
toString;
addFirst;
retainAll;
containsAll -> lastIndexOf [label=" header", dir=none];
containsAll -> contains [label=" header", dir=none];
containsAll -> addFirst [label=" header", dir=none];
containsAll -> retainAll [label=" header", dir=none];
isEmpty -> lastIndexOf [label=" size", dir=none];
isEmpty -> size [label=" size", dir=none];
isEmpty -> equals [label=" size", dir=none];
isEmpty -> toString [label=" size", dir=none];
getLast -> containsAll [label=" header", dir=none];
getLast -> removeLast [label=" header", dir=none];
getLast -> remove [label=" header", dir=none];
getLast -> addLast [label=" header", dir=none];
getLast -> lastIndexOf [label=" header", dir=none];
getLast -> removeAll [label=" header", dir=none];
getLast -> contains [label=" header", dir=none];
getLast -> getFirst [label=" header", dir=none];
getLast -> removeFirst [label=" header", dir=none];
getLast -> toArray [label=" header", dir=none];
getLast -> indexOf [label=" header", dir=none];
getLast -> addFirst [label=" header", dir=none];
getLast -> retainAll [label=" header", dir=none];
removeLast -> addLast [label=" header", dir=none];
removeLast -> lastIndexOf [label=" header", dir=none];
removeLast -> removeAll [label=" header", dir=none];
removeLast -> contains [label=" header", dir=none];
removeLast -> getFirst [label=" header", dir=none];
removeLast -> removeFirst [label=" header", dir=none];
removeLast -> containsAll [label=" header", dir=none];
removeLast -> toArray [label=" header", dir=none];
removeLast -> indexOf [label=" header", dir=none];
removeLast -> remove [label=" header", dir=none];
removeLast -> addFirst [label=" header", dir=none];
removeLast -> retainAll [label=" header", dir=none];
remove -> addLast [label=" header", dir=none];
remove -> lastIndexOf [label=" header", dir=none];
remove -> removeAll [label=" header", dir=none];
remove -> contains [label=" header", dir=none];
remove -> getFirst [label=" header", dir=none];
remove -> removeFirst [label=" header", dir=none];
remove -> containsAll [label=" header", dir=none];
remove -> toArray [label=" header", dir=none];
remove -> indexOf [label=" header", dir=none];
remove -> addFirst [label=" header", dir=none];
remove -> retainAll [label=" header", dir=none];
addLast -> lastIndexOf [label=" header", dir=none];
addLast -> removeAll [label=" header", dir=none];
addLast -> contains [label=" header", dir=none];
addLast -> getFirst [label=" header", dir=none];
addLast -> removeFirst [label=" header", dir=none];
addLast -> containsAll [label=" header", dir=none];
addLast -> toArray [label=" header", dir=none];
addLast -> indexOf [label=" header", dir=none];
addLast -> addFirst [label=" header", dir=none];
addLast -> retainAll [label=" header", dir=none];
lastIndexOf -> contains [label=" header", dir=none];
lastIndexOf -> size [label=" size", dir=none];
lastIndexOf -> equals [label=" size", dir=none];
lastIndexOf -> toString [label=" size", dir=none];
lastIndexOf -> addFirst [label=" header", dir=none];
lastIndexOf -> retainAll [label=" header", dir=none];
removeAll -> lastIndexOf [label=" header", dir=none];
removeAll -> contains [label=" header", dir=none];
removeAll -> getFirst [label=" header", dir=none];
removeAll -> removeFirst [label=" header", dir=none];
removeAll -> containsAll [label=" header", dir=none];
removeAll -> toArray [label=" header", dir=none];
removeAll -> indexOf [label=" header", dir=none];
removeAll -> addFirst [label=" header", dir=none];
removeAll -> retainAll [label=" header", dir=none];
contains -> addFirst [label=" header", dir=none];
contains -> retainAll [label=" header", dir=none];
size -> equals [label=" size", dir=none];
size -> toString [label=" size", dir=none];
getFirst -> lastIndexOf [label=" header", dir=none];
getFirst -> contains [label=" header", dir=none];
getFirst -> removeFirst [label=" header", dir=none];
getFirst -> containsAll [label=" header", dir=none];
getFirst -> toArray [label=" header", dir=none];
getFirst -> indexOf [label=" header", dir=none];
getFirst -> addFirst [label=" header", dir=none];
getFirst -> retainAll [label=" header", dir=none];
removeFirst -> lastIndexOf [label=" header", dir=none];
removeFirst -> contains [label=" header", dir=none];
removeFirst -> containsAll [label=" header", dir=none];
removeFirst -> toArray [label=" header", dir=none];
removeFirst -> indexOf [label=" header", dir=none];
removeFirst -> addFirst [label=" header", dir=none];
removeFirst -> retainAll [label=" header", dir=none];
equals -> toString [label=" size", dir=none];
toArray -> lastIndexOf [label=" size, header", dir=none];
toArray -> contains [label=" header", dir=none];
toArray -> size [label=" size", dir=none];
toArray -> containsAll [label=" header", dir=none];
toArray -> equals [label=" size", dir=none];
toArray -> isEmpty [label=" size", dir=none];
toArray -> toString [label=" size", dir=none];
toArray -> indexOf [label=" header", dir=none];
toArray -> addFirst [label=" header", dir=none];
toArray -> retainAll [label=" header", dir=none];
indexOf -> lastIndexOf [label=" header", dir=none];
indexOf -> contains [label=" header", dir=none];
indexOf -> containsAll [label=" header", dir=none];
indexOf -> addFirst [label=" header", dir=none];
indexOf -> retainAll [label=" header", dir=none];
addFirst -> retainAll [label=" header", dir=none];
}