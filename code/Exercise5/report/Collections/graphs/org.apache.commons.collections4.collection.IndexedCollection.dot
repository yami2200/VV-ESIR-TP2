digraph G {
add;
reindex;
containsAll;
values;
clear;
nonUniqueIndexedCollection;
remove;
removeIf;
uniqueIndexedCollection;
contains;
removeAll;
addAll;
get;
retainAll;
uniqueIndexedCollection -> contains [label=" keyTransformer", dir=none];
contains -> get [label=" index", dir=none];
contains -> retainAll [label=" index", dir=none];
reindex -> contains [label=" index", dir=none];
reindex -> containsAll [label=" index", dir=none];
reindex -> values [label=" index", dir=none];
reindex -> get [label=" index", dir=none];
reindex -> clear [label=" index", dir=none];
reindex -> removeIf [label=" index", dir=none];
reindex -> retainAll [label=" index", dir=none];
containsAll -> uniqueIndexedCollection [label=" keyTransformer", dir=none];
containsAll -> contains [label=" index, keyTransformer", dir=none];
containsAll -> values [label=" index", dir=none];
containsAll -> get [label=" index", dir=none];
containsAll -> clear [label=" index", dir=none];
containsAll -> nonUniqueIndexedCollection [label=" keyTransformer", dir=none];
containsAll -> removeIf [label=" index", dir=none];
containsAll -> retainAll [label=" index", dir=none];
values -> contains [label=" index", dir=none];
values -> get [label=" index", dir=none];
values -> clear [label=" index", dir=none];
values -> removeIf [label=" index", dir=none];
values -> retainAll [label=" index", dir=none];
get -> retainAll [label=" index", dir=none];
clear -> contains [label=" index", dir=none];
clear -> get [label=" index", dir=none];
clear -> removeIf [label=" index", dir=none];
clear -> retainAll [label=" index", dir=none];
nonUniqueIndexedCollection -> uniqueIndexedCollection [label=" keyTransformer", dir=none];
nonUniqueIndexedCollection -> contains [label=" keyTransformer", dir=none];
removeIf -> contains [label=" index", dir=none];
removeIf -> get [label=" index", dir=none];
removeIf -> retainAll [label=" index", dir=none];
}