digraph G {
add;
characteristics;
subtract;
isValid;
asIndexArray;
clear;
getShape;
forEachIndex;
forEachCount;
cardinality;
contains;
copy;
forEachBitMap;
add -> subtract [label=" counts, state", dir=none];
add -> isValid [label=" state", dir=none];
add -> asIndexArray [label=" counts", dir=none];
add -> clear [label=" counts", dir=none];
add -> forEachIndex [label=" counts", dir=none];
add -> forEachCount [label=" counts", dir=none];
add -> cardinality [label=" counts", dir=none];
add -> forEachBitMap [label=" counts", dir=none];
subtract -> isValid [label=" state", dir=none];
subtract -> asIndexArray [label=" counts", dir=none];
subtract -> clear [label=" counts", dir=none];
subtract -> forEachIndex [label=" counts", dir=none];
subtract -> forEachCount [label=" counts", dir=none];
subtract -> cardinality [label=" counts", dir=none];
subtract -> forEachBitMap [label=" counts", dir=none];
asIndexArray -> clear [label=" counts", dir=none];
asIndexArray -> forEachIndex [label=" counts", dir=none];
asIndexArray -> forEachCount [label=" counts", dir=none];
asIndexArray -> cardinality [label=" counts", dir=none];
asIndexArray -> forEachBitMap [label=" counts", dir=none];
clear -> forEachIndex [label=" counts", dir=none];
clear -> forEachCount [label=" counts", dir=none];
clear -> cardinality [label=" counts", dir=none];
clear -> forEachBitMap [label=" counts", dir=none];
forEachIndex -> forEachCount [label=" counts", dir=none];
forEachIndex -> cardinality [label=" counts", dir=none];
forEachIndex -> forEachBitMap [label=" counts", dir=none];
forEachCount -> cardinality [label=" counts", dir=none];
forEachCount -> forEachBitMap [label=" counts", dir=none];
cardinality -> forEachBitMap [label=" counts", dir=none];
}