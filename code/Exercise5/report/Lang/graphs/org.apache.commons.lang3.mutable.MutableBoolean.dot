digraph G {
setTrue;
getValue;
isTrue;
toBoolean;
hashCode;
setValue;
setFalse;
equals;
isFalse;
booleanValue;
toString;
compareTo;
isTrue -> toBoolean [label=" value", dir=none];
isTrue -> hashCode [label=" value", dir=none];
isTrue -> setValue [label=" value", dir=none];
isTrue -> equals [label=" value", dir=none];
isTrue -> isFalse [label=" value", dir=none];
isTrue -> booleanValue [label=" value", dir=none];
isTrue -> toString [label=" value", dir=none];
toBoolean -> hashCode [label=" value", dir=none];
toBoolean -> setValue [label=" value", dir=none];
toBoolean -> equals [label=" value", dir=none];
toBoolean -> isFalse [label=" value", dir=none];
toBoolean -> booleanValue [label=" value", dir=none];
toBoolean -> toString [label=" value", dir=none];
hashCode -> setValue [label=" value", dir=none];
hashCode -> equals [label=" value", dir=none];
hashCode -> isFalse [label=" value", dir=none];
hashCode -> booleanValue [label=" value", dir=none];
hashCode -> toString [label=" value", dir=none];
setValue -> equals [label=" value", dir=none];
setValue -> isFalse [label=" value", dir=none];
setValue -> booleanValue [label=" value", dir=none];
setValue -> toString [label=" value", dir=none];
equals -> isFalse [label=" value", dir=none];
equals -> booleanValue [label=" value", dir=none];
equals -> toString [label=" value", dir=none];
isFalse -> booleanValue [label=" value", dir=none];
isFalse -> toString [label=" value", dir=none];
booleanValue -> toString [label=" value", dir=none];
}