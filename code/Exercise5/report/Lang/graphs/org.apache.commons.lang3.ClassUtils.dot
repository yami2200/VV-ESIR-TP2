digraph G {
getClass;
getShortCanonicalName;
isAssignable;
getName;
getCanonicalName;
getShortClassName;
primitiveToWrapper;
wrappersToPrimitives;
getAllSuperclasses;
getAllInterfaces;
isPublic;
getPublicMethod;
primitivesToWrappers;
wrapperToPrimitive;
toClass;
hierarchy;
isPrimitiveOrWrapper;
getPackageCanonicalName;
comparator;
convertClassesToClassNames;
getAbbreviatedName;
getComponentType;
isPrimitiveWrapper;
getSimpleName;
getPackageName;
convertClassNamesToClasses;
isInnerClass;
wrappersToPrimitives -> isPrimitiveOrWrapper [label=" wrapperPrimitiveMap", dir=none];
wrappersToPrimitives -> isPrimitiveWrapper [label=" wrapperPrimitiveMap", dir=none];
wrappersToPrimitives -> wrapperToPrimitive [label=" wrapperPrimitiveMap", dir=none];
getShortCanonicalName -> getShortClassName [label=" INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR, reverseAbbreviationMap", dir=none];
getShortCanonicalName -> getPackageName [label=" PACKAGE_SEPARATOR_CHAR", dir=none];
getShortCanonicalName -> getPackageCanonicalName [label=" PACKAGE_SEPARATOR_CHAR", dir=none];
isPrimitiveOrWrapper -> isPrimitiveWrapper [label=" wrapperPrimitiveMap", dir=none];
getShortClassName -> getPackageName [label=" PACKAGE_SEPARATOR_CHAR", dir=none];
getShortClassName -> getPackageCanonicalName [label=" PACKAGE_SEPARATOR_CHAR", dir=none];
primitiveToWrapper -> primitivesToWrappers [label=" primitiveWrapperMap", dir=none];
wrapperToPrimitive -> isPrimitiveOrWrapper [label=" wrapperPrimitiveMap", dir=none];
wrapperToPrimitive -> isPrimitiveWrapper [label=" wrapperPrimitiveMap", dir=none];
getPackageCanonicalName -> getPackageName [label=" PACKAGE_SEPARATOR_CHAR", dir=none];
}