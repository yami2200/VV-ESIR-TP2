digraph G {
testObjectArray;
testBoolean;
testIntArray;
testSimilarObjectIgnoresAppends;
testDoubleArray;
testInt;
testStylePassedToDiffResult;
testLong;
testShortArray;
testObjectsNotSameNorEqual;
testChar;
testNullRhs;
testObject;
testTriviallyEqualTestDisabled;
testCharArray;
testDouble;
testFloatArray;
testObjectArrayEqual;
testObjectsNotSameButEqual;
testByte;
testBooleanArray;
testDiffResult;
testNullLhs;
testLongArray;
testFloat;
testShort;
testTriviallyEqualTestEnabled;
testByteArrayEqualAsObject;
testObjectsSameAndEqual;
testSameObjectIgnoresAppends;
testByteArray;
testByteArrayEqualAsObject -> testSameObjectIgnoresAppends [label=" SHORT_STYLE", dir=none];
testSimilarObjectIgnoresAppends -> testByteArrayEqualAsObject [label=" SHORT_STYLE", dir=none];
testSimilarObjectIgnoresAppends -> testSameObjectIgnoresAppends [label=" SHORT_STYLE", dir=none];
testSimilarObjectIgnoresAppends -> testStylePassedToDiffResult [label=" SHORT_STYLE", dir=none];
testSimilarObjectIgnoresAppends -> testDiffResult [label=" SHORT_STYLE", dir=none];
testStylePassedToDiffResult -> testByteArrayEqualAsObject [label=" SHORT_STYLE", dir=none];
testStylePassedToDiffResult -> testSameObjectIgnoresAppends [label=" SHORT_STYLE", dir=none];
testStylePassedToDiffResult -> testDiffResult [label=" SHORT_STYLE", dir=none];
testDiffResult -> testByteArrayEqualAsObject [label=" SHORT_STYLE", dir=none];
testDiffResult -> testSameObjectIgnoresAppends [label=" SHORT_STYLE", dir=none];
}